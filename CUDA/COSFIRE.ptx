//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23920284
// Cuda compilation tools, release 9.2, V9.2.88
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_50
.address_size 64

	// .weak	cudaMalloc
.extern .func  (.param .b64 func_retval0) malloc
(
	.param .b64 malloc_param_0
)
;
.extern .func  (.param .b64 func_retval0) cudaGetParameterBufferV2
(
	.param .b64 cudaGetParameterBufferV2_param_0,
	.param .align 4 .b8 cudaGetParameterBufferV2_param_1[12],
	.param .align 4 .b8 cudaGetParameterBufferV2_param_2[12],
	.param .b32 cudaGetParameterBufferV2_param_3
)
;
.extern .func  (.param .b32 func_retval0) cudaLaunchDeviceV2
(
	.param .b64 cudaLaunchDeviceV2_param_0,
	.param .b64 cudaLaunchDeviceV2_param_1
)
;
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd
(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
;
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0
)
;
// _ZZ6getDoGPdddE2g1 has been demoted
// _ZZ6getDoGPdddE2g2 has been demoted
.visible .const .align 4 .u32 MAXSIZE;
.const .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.const .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};

.weak .func  (.param .b32 func_retval0) cudaMalloc(
	.param .b64 cudaMalloc_param_0,
	.param .b64 cudaMalloc_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaFuncGetAttributes
.weak .func  (.param .b32 func_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaDeviceGetAttribute
.weak .func  (.param .b32 func_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaGetDevice
.weak .func  (.param .b32 func_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessor
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .weak	cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
.weak .func  (.param .b32 func_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_3,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags_param_4
)
{
	.reg .b32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z18generate2DGaussianPddi
.visible .func _Z18generate2DGaussianPddi(
	.param .b64 _Z18generate2DGaussianPddi_param_0,
	.param .b64 _Z18generate2DGaussianPddi_param_1,
	.param .b32 _Z18generate2DGaussianPddi_param_2
)
{
	.reg .pred 	%p<65>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<129>;
	.reg .f64 	%fd<137>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd6, [_Z18generate2DGaussianPddi_param_0];
	ld.param.f64 	%fd55, [_Z18generate2DGaussianPddi_param_1];
	ld.param.u32 	%r22, [_Z18generate2DGaussianPddi_param_2];
	mov.u32 	%r23, %tid.x;
	mov.u32 	%r24, %tid.y;
	mad.lo.s32 	%r1, %r24, %r22, %r23;
	shr.u32 	%r25, %r22, 31;
	add.s32 	%r26, %r22, %r25;
	shr.s32 	%r27, %r26, 1;
	sub.s32 	%r28, %r23, %r27;
	abs.s32 	%r2, %r28;
	sub.s32 	%r29, %r24, %r27;
	abs.s32 	%r3, %r29;
	cvt.rn.f64.s32	%fd1, %r2;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd1;
	}
	mov.f64 	%fd56, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5}, %fd56;
	}
	bfe.u32 	%r30, %r5, 20, 11;
	add.s32 	%r31, %r30, -1012;
	mov.u64 	%rd7, 4611686018427387904;
	shl.b64 	%rd1, %rd7, %r31;
	setp.eq.s64	%p4, %rd1, -9223372036854775808;
	abs.f64 	%fd2, %fd1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd120, [retval0+0];
	
	//{
	}// Callseq End 0
	setp.lt.s32	%p5, %r4, 0;
	and.pred  	%p1, %p5, %p4;
	@!%p1 bra 	BB6_2;
	bra.uni 	BB6_1;

BB6_1:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r32}, %fd120;
	}
	xor.b32  	%r33, %r32, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r34, %temp}, %fd120;
	}
	mov.b64 	%fd120, {%r34, %r33};

BB6_2:
	setp.eq.s32	%p6, %r2, 0;
	@%p6 bra 	BB6_5;

	setp.gt.s32	%p7, %r4, -1;
	@%p7 bra 	BB6_6;

	cvt.rzi.f64.f64	%fd58, %fd56;
	setp.neu.f64	%p8, %fd58, 0d4000000000000000;
	selp.f64	%fd120, 0dFFF8000000000000, %fd120, %p8;
	bra.uni 	BB6_6;

BB6_5:
	selp.b32	%r35, %r4, 0, %p4;
	or.b32  	%r36, %r35, 2146435072;
	setp.lt.s32	%p10, %r5, 0;
	selp.b32	%r37, %r36, %r35, %p10;
	mov.u32 	%r38, 0;
	mov.b64 	%fd120, {%r38, %r37};

BB6_6:
	add.f64 	%fd121, %fd1, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r39}, %fd121;
	}
	and.b32  	%r40, %r39, 2146435072;
	setp.ne.s32	%p11, %r40, 2146435072;
	@%p11 bra 	BB6_7;

	setp.gtu.f64	%p12, %fd2, 0d7FF0000000000000;
	@%p12 bra 	BB6_16;

	and.b32  	%r41, %r5, 2147483647;
	setp.ne.s32	%p13, %r41, 2146435072;
	@%p13 bra 	BB6_11;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r42, %temp}, %fd56;
	}
	setp.eq.s32	%p14, %r42, 0;
	@%p14 bra 	BB6_15;

BB6_11:
	and.b32  	%r43, %r4, 2147483647;
	setp.ne.s32	%p15, %r43, 2146435072;
	@%p15 bra 	BB6_12;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r44, %temp}, %fd1;
	}
	setp.ne.s32	%p16, %r44, 0;
	mov.f64 	%fd121, %fd120;
	@%p16 bra 	BB6_16;

	shr.s32 	%r45, %r5, 31;
	and.b32  	%r46, %r45, -2146435072;
	add.s32 	%r47, %r46, 2146435072;
	or.b32  	%r48, %r47, -2147483648;
	selp.b32	%r49, %r48, %r47, %p1;
	mov.u32 	%r50, 0;
	mov.b64 	%fd121, {%r50, %r49};
	bra.uni 	BB6_16;

BB6_7:
	mov.f64 	%fd121, %fd120;
	bra.uni 	BB6_16;

BB6_12:
	mov.f64 	%fd121, %fd120;
	bra.uni 	BB6_16;

BB6_15:
	setp.gt.f64	%p17, %fd2, 0d3FF0000000000000;
	selp.b32	%r51, 2146435072, 0, %p17;
	xor.b32  	%r52, %r51, 2146435072;
	setp.lt.s32	%p18, %r5, 0;
	selp.b32	%r53, %r52, %r51, %p18;
	setp.eq.s32	%p19, %r2, -1;
	selp.b32	%r54, 1072693248, %r53, %p19;
	mov.u32 	%r55, 0;
	mov.b64 	%fd121, {%r55, %r54};

BB6_16:
	setp.eq.s32	%p20, %r2, 1;
	selp.f64	%fd13, 0d3FF0000000000000, %fd121, %p20;
	cvt.rn.f64.s32	%fd14, %r3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6}, %fd14;
	}
	abs.f64 	%fd15, %fd14;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd15;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd123, [retval0+0];
	
	//{
	}// Callseq End 1
	setp.lt.s32	%p21, %r6, 0;
	and.pred  	%p2, %p21, %p4;
	@!%p2 bra 	BB6_18;
	bra.uni 	BB6_17;

BB6_17:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r56}, %fd123;
	}
	xor.b32  	%r57, %r56, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r58, %temp}, %fd123;
	}
	mov.b64 	%fd123, {%r58, %r57};

BB6_18:
	setp.eq.s32	%p23, %r3, 0;
	@%p23 bra 	BB6_21;

	setp.gt.s32	%p24, %r6, -1;
	@%p24 bra 	BB6_22;

	cvt.rzi.f64.f64	%fd61, %fd56;
	setp.neu.f64	%p25, %fd61, 0d4000000000000000;
	selp.f64	%fd123, 0dFFF8000000000000, %fd123, %p25;
	bra.uni 	BB6_22;

BB6_21:
	selp.b32	%r59, %r6, 0, %p4;
	or.b32  	%r60, %r59, 2146435072;
	setp.lt.s32	%p27, %r5, 0;
	selp.b32	%r61, %r60, %r59, %p27;
	mov.u32 	%r62, 0;
	mov.b64 	%fd123, {%r62, %r61};

BB6_22:
	add.f64 	%fd124, %fd14, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r63}, %fd124;
	}
	and.b32  	%r64, %r63, 2146435072;
	setp.ne.s32	%p28, %r64, 2146435072;
	@%p28 bra 	BB6_23;

	setp.gtu.f64	%p29, %fd15, 0d7FF0000000000000;
	@%p29 bra 	BB6_32;

	and.b32  	%r65, %r5, 2147483647;
	setp.ne.s32	%p30, %r65, 2146435072;
	@%p30 bra 	BB6_27;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r66, %temp}, %fd56;
	}
	setp.eq.s32	%p31, %r66, 0;
	@%p31 bra 	BB6_31;

BB6_27:
	and.b32  	%r67, %r6, 2147483647;
	setp.ne.s32	%p32, %r67, 2146435072;
	@%p32 bra 	BB6_28;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r68, %temp}, %fd14;
	}
	setp.ne.s32	%p33, %r68, 0;
	mov.f64 	%fd124, %fd123;
	@%p33 bra 	BB6_32;

	shr.s32 	%r69, %r5, 31;
	and.b32  	%r70, %r69, -2146435072;
	add.s32 	%r71, %r70, 2146435072;
	or.b32  	%r72, %r71, -2147483648;
	selp.b32	%r73, %r72, %r71, %p2;
	mov.u32 	%r74, 0;
	mov.b64 	%fd124, {%r74, %r73};
	bra.uni 	BB6_32;

BB6_23:
	mov.f64 	%fd124, %fd123;
	bra.uni 	BB6_32;

BB6_28:
	mov.f64 	%fd124, %fd123;
	bra.uni 	BB6_32;

BB6_31:
	setp.gt.f64	%p34, %fd15, 0d3FF0000000000000;
	selp.b32	%r75, 2146435072, 0, %p34;
	xor.b32  	%r76, %r75, 2146435072;
	setp.lt.s32	%p35, %r5, 0;
	selp.b32	%r77, %r76, %r75, %p35;
	setp.eq.s32	%p36, %r3, -1;
	selp.b32	%r78, 1072693248, %r77, %p36;
	mov.u32 	%r79, 0;
	mov.b64 	%fd124, {%r79, %r78};

BB6_32:
	setp.eq.s32	%p37, %r3, 1;
	selp.f64	%fd63, 0d3FF0000000000000, %fd124, %p37;
	add.f64 	%fd26, %fd13, %fd63;
	abs.f64 	%fd27, %fd55;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd27;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd126, [retval0+0];
	
	//{
	}// Callseq End 2
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7}, %fd55;
	}
	setp.lt.s32	%p38, %r7, 0;
	and.pred  	%p3, %p38, %p4;
	@!%p3 bra 	BB6_34;
	bra.uni 	BB6_33;

BB6_33:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r80}, %fd126;
	}
	xor.b32  	%r81, %r80, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r82, %temp}, %fd126;
	}
	mov.b64 	%fd126, {%r82, %r81};

BB6_34:
	setp.eq.f64	%p40, %fd55, 0d0000000000000000;
	@%p40 bra 	BB6_37;
	bra.uni 	BB6_35;

BB6_37:
	selp.b32	%r83, %r7, 0, %p4;
	or.b32  	%r84, %r83, 2146435072;
	setp.lt.s32	%p44, %r5, 0;
	selp.b32	%r85, %r84, %r83, %p44;
	mov.u32 	%r86, 0;
	mov.b64 	%fd126, {%r86, %r85};
	bra.uni 	BB6_38;

BB6_35:
	setp.gt.s32	%p41, %r7, -1;
	@%p41 bra 	BB6_38;

	cvt.rzi.f64.f64	%fd65, %fd56;
	setp.neu.f64	%p42, %fd65, 0d4000000000000000;
	selp.f64	%fd126, 0dFFF8000000000000, %fd126, %p42;

BB6_38:
	add.f64 	%fd127, %fd55, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r87}, %fd127;
	}
	and.b32  	%r88, %r87, 2146435072;
	setp.ne.s32	%p45, %r88, 2146435072;
	@%p45 bra 	BB6_39;

	setp.gtu.f64	%p46, %fd27, 0d7FF0000000000000;
	@%p46 bra 	BB6_48;

	and.b32  	%r89, %r5, 2147483647;
	setp.ne.s32	%p47, %r89, 2146435072;
	@%p47 bra 	BB6_43;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r90, %temp}, %fd56;
	}
	setp.eq.s32	%p48, %r90, 0;
	@%p48 bra 	BB6_47;

BB6_43:
	and.b32  	%r91, %r7, 2147483647;
	setp.ne.s32	%p49, %r91, 2146435072;
	@%p49 bra 	BB6_44;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r92, %temp}, %fd55;
	}
	setp.ne.s32	%p50, %r92, 0;
	mov.f64 	%fd127, %fd126;
	@%p50 bra 	BB6_48;

	shr.s32 	%r93, %r5, 31;
	and.b32  	%r94, %r93, -2146435072;
	add.s32 	%r95, %r94, 2146435072;
	or.b32  	%r96, %r95, -2147483648;
	selp.b32	%r97, %r96, %r95, %p3;
	mov.u32 	%r98, 0;
	mov.b64 	%fd127, {%r98, %r97};
	bra.uni 	BB6_48;

BB6_39:
	mov.f64 	%fd127, %fd126;
	bra.uni 	BB6_48;

BB6_44:
	mov.f64 	%fd127, %fd126;
	bra.uni 	BB6_48;

BB6_47:
	setp.gt.f64	%p51, %fd27, 0d3FF0000000000000;
	selp.b32	%r99, 2146435072, 0, %p51;
	xor.b32  	%r100, %r99, 2146435072;
	setp.lt.s32	%p52, %r5, 0;
	selp.b32	%r101, %r100, %r99, %p52;
	setp.eq.f64	%p53, %fd55, 0dBFF0000000000000;
	selp.b32	%r102, 1072693248, %r101, %p53;
	mov.u32 	%r103, 0;
	mov.b64 	%fd127, {%r103, %r102};

BB6_48:
	add.f64 	%fd67, %fd127, %fd127;
	setp.eq.f64	%p54, %fd55, 0d3FF0000000000000;
	selp.f64	%fd68, 0d4000000000000000, %fd67, %p54;
	neg.f64 	%fd69, %fd26;
	div.rn.f64 	%fd38, %fd69, %fd68;
	mov.f64 	%fd70, 0d4338000000000000;
	mov.f64 	%fd71, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd72, %fd38, %fd71, %fd70;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8, %temp}, %fd72;
	}
	mov.f64 	%fd73, 0dC338000000000000;
	add.rn.f64 	%fd74, %fd72, %fd73;
	mov.f64 	%fd75, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd76, %fd74, %fd75, %fd38;
	mov.f64 	%fd77, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd78, %fd74, %fd77, %fd76;
	mov.f64 	%fd79, 0d3E928AF3FCA213EA;
	mov.f64 	%fd80, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd81, %fd80, %fd78, %fd79;
	mov.f64 	%fd82, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd83, %fd81, %fd78, %fd82;
	mov.f64 	%fd84, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd85, %fd83, %fd78, %fd84;
	mov.f64 	%fd86, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd87, %fd85, %fd78, %fd86;
	mov.f64 	%fd88, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd89, %fd87, %fd78, %fd88;
	mov.f64 	%fd90, 0d3F81111111122322;
	fma.rn.f64 	%fd91, %fd89, %fd78, %fd90;
	mov.f64 	%fd92, 0d3FA55555555502A1;
	fma.rn.f64 	%fd93, %fd91, %fd78, %fd92;
	mov.f64 	%fd94, 0d3FC5555555555511;
	fma.rn.f64 	%fd95, %fd93, %fd78, %fd94;
	mov.f64 	%fd96, 0d3FE000000000000B;
	fma.rn.f64 	%fd97, %fd95, %fd78, %fd96;
	mov.f64 	%fd98, 0d3FF0000000000000;
	fma.rn.f64 	%fd99, %fd97, %fd78, %fd98;
	fma.rn.f64 	%fd100, %fd99, %fd78, %fd98;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9, %temp}, %fd100;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r10}, %fd100;
	}
	shl.b32 	%r104, %r8, 20;
	add.s32 	%r105, %r10, %r104;
	mov.b64 	%fd128, {%r9, %r105};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r106}, %fd38;
	}
	mov.b32 	 %f2, %r106;
	abs.f32 	%f1, %f2;
	setp.lt.f32	%p55, %f1, 0f4086232B;
	@%p55 bra 	BB6_51;

	setp.lt.f64	%p56, %fd38, 0d0000000000000000;
	add.f64 	%fd101, %fd38, 0d7FF0000000000000;
	selp.f64	%fd128, 0d0000000000000000, %fd101, %p56;
	setp.geu.f32	%p57, %f1, 0f40874800;
	@%p57 bra 	BB6_51;

	shr.u32 	%r107, %r8, 31;
	add.s32 	%r108, %r8, %r107;
	shr.s32 	%r109, %r108, 1;
	shl.b32 	%r110, %r109, 20;
	add.s32 	%r111, %r110, %r10;
	mov.b64 	%fd102, {%r9, %r111};
	sub.s32 	%r112, %r8, %r109;
	shl.b32 	%r113, %r112, 20;
	add.s32 	%r114, %r113, 1072693248;
	mov.u32 	%r115, 0;
	mov.b64 	%fd103, {%r115, %r114};
	mul.f64 	%fd128, %fd102, %fd103;

BB6_51:
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd2, %rd6, %rd8;
	st.f64 	[%rd2], %fd128;
	bar.sync 	0;
	mov.f64 	%fd135, 0d0000000000000000;
	setp.lt.s32	%p58, %r22, 1;
	@%p58 bra 	BB6_64;

	and.b32  	%r11, %r22, 3;
	mov.u32 	%r116, 0;
	mov.f64 	%fd105, 0d0000000000000000;
	mov.f64 	%fd135, %fd105;
	mov.u32 	%r124, %r116;

BB6_53:
	mul.lo.s32 	%r13, %r124, %r22;
	setp.eq.s32	%p59, %r11, 0;
	@%p59 bra 	BB6_54;
	bra.uni 	BB6_55;

BB6_54:
	mov.f64 	%fd132, %fd135;
	mov.u32 	%r128, %r116;
	mov.f64 	%fd135, %fd105;
	bra.uni 	BB6_60;

BB6_55:
	setp.eq.s32	%p60, %r11, 1;
	mov.u32 	%r126, 0;
	@%p60 bra 	BB6_59;

	setp.eq.s32	%p61, %r11, 2;
	mov.u32 	%r125, 0;
	@%p61 bra 	BB6_58;

	mul.wide.s32 	%rd9, %r13, 8;
	add.s64 	%rd10, %rd6, %rd9;
	ld.f64 	%fd107, [%rd10];
	add.f64 	%fd135, %fd135, %fd107;
	mov.u32 	%r125, 1;

BB6_58:
	add.s32 	%r121, %r125, %r13;
	mul.wide.s32 	%rd11, %r121, 8;
	add.s64 	%rd12, %rd6, %rd11;
	ld.f64 	%fd108, [%rd12];
	add.f64 	%fd135, %fd135, %fd108;
	add.s32 	%r126, %r125, 1;

BB6_59:
	add.s32 	%r122, %r126, %r13;
	mul.wide.s32 	%rd13, %r122, 8;
	add.s64 	%rd14, %rd6, %rd13;
	ld.f64 	%fd109, [%rd14];
	add.f64 	%fd132, %fd135, %fd109;
	add.s32 	%r128, %r126, 1;
	mov.f64 	%fd135, %fd132;

BB6_60:
	setp.lt.u32	%p62, %r22, 4;
	@%p62 bra 	BB6_63;

	mad.lo.s32 	%r123, %r22, %r124, %r128;
	mul.wide.s32 	%rd15, %r123, 8;
	add.s64 	%rd16, %rd6, %rd15;
	mov.f64 	%fd135, %fd132;

BB6_62:
	ld.f64 	%fd110, [%rd16];
	add.f64 	%fd111, %fd135, %fd110;
	ld.f64 	%fd112, [%rd16+8];
	add.f64 	%fd113, %fd111, %fd112;
	ld.f64 	%fd114, [%rd16+16];
	add.f64 	%fd115, %fd113, %fd114;
	ld.f64 	%fd116, [%rd16+24];
	add.f64 	%fd135, %fd115, %fd116;
	add.s64 	%rd16, %rd16, 32;
	add.s32 	%r128, %r128, 4;
	setp.lt.s32	%p63, %r128, %r22;
	@%p63 bra 	BB6_62;

BB6_63:
	add.s32 	%r124, %r124, 1;
	setp.lt.s32	%p64, %r124, %r22;
	@%p64 bra 	BB6_53;

BB6_64:
	ld.f64 	%fd117, [%rd2];
	div.rn.f64 	%fd118, %fd117, %fd135;
	st.f64 	[%rd2], %fd118;
	ret;
}

	// .globl	_Z13geometricMeanPdS_jjid
.visible .func _Z13geometricMeanPdS_jjid(
	.param .b64 _Z13geometricMeanPdS_jjid_param_0,
	.param .b64 _Z13geometricMeanPdS_jjid_param_1,
	.param .b32 _Z13geometricMeanPdS_jjid_param_2,
	.param .b32 _Z13geometricMeanPdS_jjid_param_3,
	.param .b32 _Z13geometricMeanPdS_jjid_param_4,
	.param .b64 _Z13geometricMeanPdS_jjid_param_5
)
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<113>;
	.reg .f64 	%fd<42>;
	.reg .b64 	%rd<19>;


	ld.param.u64 	%rd1, [_Z13geometricMeanPdS_jjid_param_0];
	ld.param.u64 	%rd2, [_Z13geometricMeanPdS_jjid_param_1];
	ld.param.u32 	%r26, [_Z13geometricMeanPdS_jjid_param_2];
	ld.param.u32 	%r27, [_Z13geometricMeanPdS_jjid_param_3];
	ld.param.u32 	%r28, [_Z13geometricMeanPdS_jjid_param_4];
	mov.u32 	%r29, %ctaid.x;
	mov.u32 	%r30, %ntid.x;
	mov.u32 	%r31, %tid.x;
	mad.lo.s32 	%r32, %r30, %r29, %r31;
	mov.u32 	%r33, %ntid.y;
	mov.u32 	%r34, %ctaid.y;
	mov.u32 	%r35, %tid.y;
	mad.lo.s32 	%r36, %r33, %r34, %r35;
	setp.ge.u32	%p1, %r36, %r26;
	setp.ge.u32	%p2, %r32, %r27;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB7_16;

	mov.f64 	%fd37, 0d0000000000000000;
	setp.lt.s32	%p4, %r28, 1;
	@%p4 bra 	BB7_11;

	mul.lo.s32 	%r1, %r27, %r26;
	and.b32  	%r38, %r28, 3;
	setp.eq.s32	%p5, %r38, 0;
	mov.f64 	%fd37, 0d0000000000000000;
	mov.u32 	%r106, 0;
	@%p5 bra 	BB7_8;

	setp.eq.s32	%p6, %r38, 1;
	mov.f64 	%fd34, 0d0000000000000000;
	mov.u32 	%r105, 0;
	@%p6 bra 	BB7_7;

	setp.eq.s32	%p7, %r38, 2;
	mov.f64 	%fd33, 0d0000000000000000;
	mov.u32 	%r104, 0;
	@%p7 bra 	BB7_6;

	mad.lo.s32 	%r52, %r36, %r27, %r32;
	mul.wide.u32 	%rd3, %r52, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.f64 	%fd22, [%rd4];
	add.f64 	%fd33, %fd22, 0d0000000000000000;
	mov.u32 	%r104, 1;

BB7_6:
	neg.s32 	%r53, %r104;
	and.b32  	%r54, %r1, %r53;
	mad.lo.s32 	%r63, %r36, %r27, %r32;
	add.s32 	%r64, %r54, %r63;
	mul.wide.u32 	%rd5, %r64, 8;
	add.s64 	%rd6, %rd2, %rd5;
	ld.f64 	%fd23, [%rd6];
	add.f64 	%fd34, %fd33, %fd23;
	add.s32 	%r105, %r104, 1;

BB7_7:
	mad.lo.s32 	%r73, %r36, %r27, %r32;
	mad.lo.s32 	%r74, %r1, %r105, %r73;
	mul.wide.u32 	%rd7, %r74, 8;
	add.s64 	%rd8, %rd2, %rd7;
	ld.f64 	%fd24, [%rd8];
	add.f64 	%fd37, %fd34, %fd24;
	add.s32 	%r106, %r105, 1;

BB7_8:
	setp.lt.u32	%p8, %r28, 4;
	@%p8 bra 	BB7_11;

	add.s32 	%r83, %r106, 3;
	mad.lo.s32 	%r84, %r26, %r83, %r36;
	mad.lo.s32 	%r110, %r27, %r84, %r32;
	shl.b32 	%r8, %r1, 2;
	add.s32 	%r86, %r106, 2;
	mad.lo.s32 	%r87, %r26, %r86, %r36;
	mad.lo.s32 	%r109, %r27, %r87, %r32;
	add.s32 	%r88, %r106, 1;
	mad.lo.s32 	%r89, %r26, %r88, %r36;
	mad.lo.s32 	%r108, %r27, %r89, %r32;
	mad.lo.s32 	%r90, %r106, %r26, %r36;
	mad.lo.s32 	%r107, %r27, %r90, %r32;

BB7_10:
	mul.wide.u32 	%rd9, %r107, 8;
	add.s64 	%rd10, %rd2, %rd9;
	ld.f64 	%fd25, [%rd10];
	add.f64 	%fd26, %fd37, %fd25;
	mul.wide.u32 	%rd11, %r108, 8;
	add.s64 	%rd12, %rd2, %rd11;
	ld.f64 	%fd27, [%rd12];
	add.f64 	%fd28, %fd26, %fd27;
	mul.wide.u32 	%rd13, %r109, 8;
	add.s64 	%rd14, %rd2, %rd13;
	ld.f64 	%fd29, [%rd14];
	add.f64 	%fd30, %fd28, %fd29;
	mul.wide.u32 	%rd15, %r110, 8;
	add.s64 	%rd16, %rd2, %rd15;
	ld.f64 	%fd31, [%rd16];
	add.f64 	%fd37, %fd30, %fd31;
	add.s32 	%r110, %r110, %r8;
	add.s32 	%r109, %r109, %r8;
	add.s32 	%r108, %r108, %r8;
	add.s32 	%r107, %r107, %r8;
	add.s32 	%r106, %r106, 4;
	setp.lt.s32	%p9, %r106, %r28;
	@%p9 bra 	BB7_10;

BB7_11:
	mov.u32 	%r91, 1;
	div.s32 	%r22, %r91, %r28;
	abs.s32 	%r92, %r22;
	and.b32  	%r93, %r92, 1;
	setp.eq.b32	%p10, %r93, 1;
	not.pred 	%p11, %p10;
	selp.f64	%fd40, 0d3FF0000000000000, %fd37, %p11;
	shr.u32 	%r112, %r92, 1;
	setp.eq.s32	%p12, %r112, 0;
	@%p12 bra 	BB7_13;

BB7_12:
	and.b32  	%r94, %r112, 1;
	setp.eq.b32	%p13, %r94, 1;
	not.pred 	%p14, %p13;
	mul.f64 	%fd37, %fd37, %fd37;
	mul.f64 	%fd32, %fd40, %fd37;
	selp.f64	%fd40, %fd40, %fd32, %p14;
	shr.u32 	%r112, %r112, 1;
	setp.ne.s32	%p15, %r112, 0;
	@%p15 bra 	BB7_12;

BB7_13:
	setp.gt.s32	%p16, %r22, -1;
	@%p16 bra 	BB7_15;

	rcp.rn.f64 	%fd40, %fd40;

BB7_15:
	mad.lo.s32 	%r103, %r36, %r27, %r32;
	mul.wide.s32 	%rd17, %r103, 8;
	add.s64 	%rd18, %rd1, %rd17;
	st.f64 	[%rd18], %fd40;

BB7_16:
	ret;
}

	// .globl	_Z6getDoGPddd
.visible .entry _Z6getDoGPddd(
	.param .u64 _Z6getDoGPddd_param_0,
	.param .f64 _Z6getDoGPddd_param_1,
	.param .f64 _Z6getDoGPddd_param_2
)
{
	.reg .pred 	%p<94>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<244>;
	.reg .f64 	%fd<266>;
	.reg .b64 	%rd<8>;
	// demoted variable
	.shared .align 8 .b8 _ZZ6getDoGPdddE2g1[3200];
	// demoted variable
	.shared .align 8 .b8 _ZZ6getDoGPdddE2g2[3200];

	ld.param.f64 	%fd84, [_Z6getDoGPddd_param_1];
	mul.f64 	%fd86, %fd84, 0d4008000000000000;
	cvt.rpi.f64.f64	%fd87, %fd86;
	fma.rn.f64 	%fd88, %fd87, 0d4000000000000000, 0d3FF0000000000000;
	cvt.rzi.s32.f64	%r1, %fd88;
	bar.sync 	0;
	mov.u32 	%r46, %tid.y;
	mov.u32 	%r47, %tid.x;
	shr.u32 	%r48, %r1, 31;
	add.s32 	%r49, %r1, %r48;
	shr.s32 	%r50, %r49, 1;
	sub.s32 	%r51, %r47, %r50;
	abs.s32 	%r3, %r51;
	sub.s32 	%r52, %r46, %r50;
	abs.s32 	%r4, %r52;
	cvt.rn.f64.s32	%fd1, %r3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5}, %fd1;
	}
	mov.f64 	%fd89, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6}, %fd89;
	}
	bfe.u32 	%r53, %r6, 20, 11;
	add.s32 	%r54, %r53, -1012;
	mov.u64 	%rd3, 4611686018427387904;
	shl.b64 	%rd1, %rd3, %r54;
	setp.eq.s64	%p5, %rd1, -9223372036854775808;
	abs.f64 	%fd2, %fd1;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd237, [retval0+0];
	
	//{
	}// Callseq End 3
	setp.lt.s32	%p6, %r5, 0;
	and.pred  	%p1, %p6, %p5;
	@!%p1 bra 	BB8_2;
	bra.uni 	BB8_1;

BB8_1:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r55}, %fd237;
	}
	xor.b32  	%r56, %r55, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r57, %temp}, %fd237;
	}
	mov.b64 	%fd237, {%r57, %r56};

BB8_2:
	setp.eq.s32	%p7, %r3, 0;
	@%p7 bra 	BB8_5;

	setp.gt.s32	%p8, %r5, -1;
	@%p8 bra 	BB8_6;

	cvt.rzi.f64.f64	%fd91, %fd89;
	setp.neu.f64	%p9, %fd91, 0d4000000000000000;
	selp.f64	%fd237, 0dFFF8000000000000, %fd237, %p9;
	bra.uni 	BB8_6;

BB8_5:
	selp.b32	%r58, %r5, 0, %p5;
	or.b32  	%r59, %r58, 2146435072;
	setp.lt.s32	%p11, %r6, 0;
	selp.b32	%r60, %r59, %r58, %p11;
	mov.u32 	%r61, 0;
	mov.b64 	%fd237, {%r61, %r60};

BB8_6:
	add.f64 	%fd238, %fd1, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r62}, %fd238;
	}
	and.b32  	%r63, %r62, 2146435072;
	setp.ne.s32	%p12, %r63, 2146435072;
	@%p12 bra 	BB8_7;

	setp.gtu.f64	%p13, %fd2, 0d7FF0000000000000;
	@%p13 bra 	BB8_16;

	and.b32  	%r64, %r6, 2147483647;
	setp.ne.s32	%p14, %r64, 2146435072;
	@%p14 bra 	BB8_11;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r65, %temp}, %fd89;
	}
	setp.eq.s32	%p15, %r65, 0;
	@%p15 bra 	BB8_15;

BB8_11:
	and.b32  	%r66, %r5, 2147483647;
	setp.ne.s32	%p16, %r66, 2146435072;
	@%p16 bra 	BB8_12;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r67, %temp}, %fd1;
	}
	setp.ne.s32	%p17, %r67, 0;
	mov.f64 	%fd238, %fd237;
	@%p17 bra 	BB8_16;

	shr.s32 	%r68, %r6, 31;
	and.b32  	%r69, %r68, -2146435072;
	add.s32 	%r70, %r69, 2146435072;
	or.b32  	%r71, %r70, -2147483648;
	selp.b32	%r72, %r71, %r70, %p1;
	mov.u32 	%r73, 0;
	mov.b64 	%fd238, {%r73, %r72};
	bra.uni 	BB8_16;

BB8_7:
	mov.f64 	%fd238, %fd237;
	bra.uni 	BB8_16;

BB8_12:
	mov.f64 	%fd238, %fd237;
	bra.uni 	BB8_16;

BB8_15:
	setp.gt.f64	%p18, %fd2, 0d3FF0000000000000;
	selp.b32	%r74, 2146435072, 0, %p18;
	xor.b32  	%r75, %r74, 2146435072;
	setp.lt.s32	%p19, %r6, 0;
	selp.b32	%r76, %r75, %r74, %p19;
	setp.eq.s32	%p20, %r3, -1;
	selp.b32	%r77, 1072693248, %r76, %p20;
	mov.u32 	%r78, 0;
	mov.b64 	%fd238, {%r78, %r77};

BB8_16:
	cvt.rn.f64.s32	%fd13, %r4;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7}, %fd13;
	}
	abs.f64 	%fd14, %fd13;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd14;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd240, [retval0+0];
	
	//{
	}// Callseq End 4
	setp.lt.s32	%p21, %r7, 0;
	and.pred  	%p2, %p21, %p5;
	@!%p2 bra 	BB8_18;
	bra.uni 	BB8_17;

BB8_17:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r79}, %fd240;
	}
	xor.b32  	%r80, %r79, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r81, %temp}, %fd240;
	}
	mov.b64 	%fd240, {%r81, %r80};

BB8_18:
	setp.eq.s32	%p23, %r4, 0;
	setp.eq.s32	%p24, %r3, 1;
	selp.f64	%fd18, 0d3FF0000000000000, %fd238, %p24;
	@%p23 bra 	BB8_21;

	setp.gt.s32	%p25, %r7, -1;
	@%p25 bra 	BB8_22;

	cvt.rzi.f64.f64	%fd94, %fd89;
	setp.neu.f64	%p26, %fd94, 0d4000000000000000;
	selp.f64	%fd240, 0dFFF8000000000000, %fd240, %p26;
	bra.uni 	BB8_22;

BB8_21:
	selp.b32	%r82, %r7, 0, %p5;
	or.b32  	%r83, %r82, 2146435072;
	setp.lt.s32	%p28, %r6, 0;
	selp.b32	%r84, %r83, %r82, %p28;
	mov.u32 	%r85, 0;
	mov.b64 	%fd240, {%r85, %r84};

BB8_22:
	add.f64 	%fd241, %fd13, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r86}, %fd241;
	}
	and.b32  	%r87, %r86, 2146435072;
	setp.ne.s32	%p29, %r87, 2146435072;
	@%p29 bra 	BB8_23;

	setp.gtu.f64	%p30, %fd14, 0d7FF0000000000000;
	@%p30 bra 	BB8_32;

	and.b32  	%r88, %r6, 2147483647;
	setp.ne.s32	%p31, %r88, 2146435072;
	@%p31 bra 	BB8_27;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r89, %temp}, %fd89;
	}
	setp.eq.s32	%p32, %r89, 0;
	@%p32 bra 	BB8_31;

BB8_27:
	and.b32  	%r90, %r7, 2147483647;
	setp.ne.s32	%p33, %r90, 2146435072;
	@%p33 bra 	BB8_28;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r91, %temp}, %fd13;
	}
	setp.ne.s32	%p34, %r91, 0;
	mov.f64 	%fd241, %fd240;
	@%p34 bra 	BB8_32;

	shr.s32 	%r92, %r6, 31;
	and.b32  	%r93, %r92, -2146435072;
	add.s32 	%r94, %r93, 2146435072;
	or.b32  	%r95, %r94, -2147483648;
	selp.b32	%r96, %r95, %r94, %p2;
	mov.u32 	%r97, 0;
	mov.b64 	%fd241, {%r97, %r96};
	bra.uni 	BB8_32;

BB8_23:
	mov.f64 	%fd241, %fd240;
	bra.uni 	BB8_32;

BB8_28:
	mov.f64 	%fd241, %fd240;
	bra.uni 	BB8_32;

BB8_31:
	setp.gt.f64	%p35, %fd14, 0d3FF0000000000000;
	selp.b32	%r98, 2146435072, 0, %p35;
	xor.b32  	%r99, %r98, 2146435072;
	setp.lt.s32	%p36, %r6, 0;
	selp.b32	%r100, %r99, %r98, %p36;
	setp.eq.s32	%p37, %r4, -1;
	selp.b32	%r101, 1072693248, %r100, %p37;
	mov.u32 	%r102, 0;
	mov.b64 	%fd241, {%r102, %r101};

BB8_32:
	setp.eq.s32	%p38, %r4, 1;
	selp.f64	%fd96, 0d3FF0000000000000, %fd241, %p38;
	add.f64 	%fd97, %fd18, %fd96;
	neg.f64 	%fd26, %fd97;
	abs.f64 	%fd27, %fd84;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd27;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd243, [retval0+0];
	
	//{
	}// Callseq End 5
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd84;
	}
	setp.lt.s32	%p39, %r8, 0;
	and.pred  	%p3, %p39, %p5;
	@!%p3 bra 	BB8_34;
	bra.uni 	BB8_33;

BB8_33:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r103}, %fd243;
	}
	xor.b32  	%r104, %r103, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r105, %temp}, %fd243;
	}
	mov.b64 	%fd243, {%r105, %r104};

BB8_34:
	setp.eq.f64	%p41, %fd84, 0d0000000000000000;
	@%p41 bra 	BB8_37;
	bra.uni 	BB8_35;

BB8_37:
	selp.b32	%r106, %r8, 0, %p5;
	or.b32  	%r107, %r106, 2146435072;
	setp.lt.s32	%p45, %r6, 0;
	selp.b32	%r108, %r107, %r106, %p45;
	mov.u32 	%r109, 0;
	mov.b64 	%fd243, {%r109, %r108};
	bra.uni 	BB8_38;

BB8_35:
	setp.gt.s32	%p42, %r8, -1;
	@%p42 bra 	BB8_38;

	cvt.rzi.f64.f64	%fd99, %fd89;
	setp.neu.f64	%p43, %fd99, 0d4000000000000000;
	selp.f64	%fd243, 0dFFF8000000000000, %fd243, %p43;

BB8_38:
	add.f64 	%fd244, %fd84, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r110}, %fd244;
	}
	and.b32  	%r111, %r110, 2146435072;
	setp.ne.s32	%p46, %r111, 2146435072;
	@%p46 bra 	BB8_39;

	setp.gtu.f64	%p47, %fd27, 0d7FF0000000000000;
	@%p47 bra 	BB8_48;

	and.b32  	%r112, %r6, 2147483647;
	setp.ne.s32	%p48, %r112, 2146435072;
	@%p48 bra 	BB8_43;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r113, %temp}, %fd89;
	}
	setp.eq.s32	%p49, %r113, 0;
	@%p49 bra 	BB8_47;

BB8_43:
	and.b32  	%r114, %r8, 2147483647;
	setp.ne.s32	%p50, %r114, 2146435072;
	@%p50 bra 	BB8_44;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r115, %temp}, %fd84;
	}
	setp.ne.s32	%p51, %r115, 0;
	mov.f64 	%fd244, %fd243;
	@%p51 bra 	BB8_48;

	shr.s32 	%r116, %r6, 31;
	and.b32  	%r117, %r116, -2146435072;
	add.s32 	%r118, %r117, 2146435072;
	or.b32  	%r119, %r118, -2147483648;
	selp.b32	%r120, %r119, %r118, %p3;
	mov.u32 	%r121, 0;
	mov.b64 	%fd244, {%r121, %r120};
	bra.uni 	BB8_48;

BB8_39:
	mov.f64 	%fd244, %fd243;
	bra.uni 	BB8_48;

BB8_44:
	mov.f64 	%fd244, %fd243;
	bra.uni 	BB8_48;

BB8_47:
	setp.gt.f64	%p52, %fd27, 0d3FF0000000000000;
	selp.b32	%r122, 2146435072, 0, %p52;
	xor.b32  	%r123, %r122, 2146435072;
	setp.lt.s32	%p53, %r6, 0;
	selp.b32	%r124, %r123, %r122, %p53;
	setp.eq.f64	%p54, %fd84, 0dBFF0000000000000;
	selp.b32	%r125, 1072693248, %r124, %p54;
	mov.u32 	%r126, 0;
	mov.b64 	%fd244, {%r126, %r125};

BB8_48:
	add.f64 	%fd101, %fd244, %fd244;
	setp.eq.f64	%p55, %fd84, 0d3FF0000000000000;
	selp.f64	%fd102, 0d4000000000000000, %fd101, %p55;
	div.rn.f64 	%fd38, %fd26, %fd102;
	mov.f64 	%fd103, 0d4338000000000000;
	mov.f64 	%fd104, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd105, %fd38, %fd104, %fd103;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r9, %temp}, %fd105;
	}
	mov.f64 	%fd106, 0dC338000000000000;
	add.rn.f64 	%fd107, %fd105, %fd106;
	mov.f64 	%fd108, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd109, %fd107, %fd108, %fd38;
	mov.f64 	%fd110, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd111, %fd107, %fd110, %fd109;
	mov.f64 	%fd112, 0d3E928AF3FCA213EA;
	mov.f64 	%fd113, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd114, %fd113, %fd111, %fd112;
	mov.f64 	%fd115, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd116, %fd114, %fd111, %fd115;
	mov.f64 	%fd117, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd118, %fd116, %fd111, %fd117;
	mov.f64 	%fd119, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd120, %fd118, %fd111, %fd119;
	mov.f64 	%fd121, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd122, %fd120, %fd111, %fd121;
	mov.f64 	%fd123, 0d3F81111111122322;
	fma.rn.f64 	%fd124, %fd122, %fd111, %fd123;
	mov.f64 	%fd125, 0d3FA55555555502A1;
	fma.rn.f64 	%fd126, %fd124, %fd111, %fd125;
	mov.f64 	%fd127, 0d3FC5555555555511;
	fma.rn.f64 	%fd128, %fd126, %fd111, %fd127;
	mov.f64 	%fd129, 0d3FE000000000000B;
	fma.rn.f64 	%fd130, %fd128, %fd111, %fd129;
	mov.f64 	%fd131, 0d3FF0000000000000;
	fma.rn.f64 	%fd132, %fd130, %fd111, %fd131;
	fma.rn.f64 	%fd133, %fd132, %fd111, %fd131;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r10, %temp}, %fd133;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r11}, %fd133;
	}
	shl.b32 	%r127, %r9, 20;
	add.s32 	%r128, %r11, %r127;
	mov.b64 	%fd245, {%r10, %r128};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r129}, %fd38;
	}
	mov.b32 	 %f3, %r129;
	abs.f32 	%f1, %f3;
	setp.lt.f32	%p56, %f1, 0f4086232B;
	@%p56 bra 	BB8_51;

	setp.lt.f64	%p57, %fd38, 0d0000000000000000;
	add.f64 	%fd134, %fd38, 0d7FF0000000000000;
	selp.f64	%fd245, 0d0000000000000000, %fd134, %p57;
	setp.geu.f32	%p58, %f1, 0f40874800;
	@%p58 bra 	BB8_51;

	mov.f64 	%fd235, 0d4338000000000000;
	mov.f64 	%fd234, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd233, %fd38, %fd234, %fd235;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r222, %temp}, %fd233;
	}
	shr.u32 	%r130, %r222, 31;
	add.s32 	%r131, %r222, %r130;
	shr.s32 	%r132, %r131, 1;
	shl.b32 	%r133, %r132, 20;
	add.s32 	%r134, %r133, %r11;
	mov.b64 	%fd135, {%r10, %r134};
	sub.s32 	%r135, %r222, %r132;
	shl.b32 	%r136, %r135, 20;
	add.s32 	%r137, %r136, 1072693248;
	mov.u32 	%r138, 0;
	mov.b64 	%fd136, {%r138, %r137};
	mul.f64 	%fd245, %fd135, %fd136;

BB8_51:
	mov.u32 	%r225, %tid.x;
	mov.u32 	%r224, %tid.y;
	mad.lo.s32 	%r223, %r224, %r1, %r225;
	shl.b32 	%r139, %r223, 3;
	mov.u32 	%r140, _ZZ6getDoGPdddE2g1;
	add.s32 	%r12, %r140, %r139;
	st.shared.f64 	[%r12], %fd245;
	bar.sync 	0;
	mov.f64 	%fd252, 0d0000000000000000;
	setp.lt.s32	%p59, %r1, 1;
	@%p59 bra 	BB8_66;

	and.b32  	%r13, %r1, 3;
	mov.u32 	%r141, 0;
	mov.f64 	%fd138, 0d0000000000000000;
	mov.f64 	%fd252, %fd138;
	mov.u32 	%r232, %r141;

BB8_53:
	mul.lo.s32 	%r15, %r232, %r1;
	setp.eq.s32	%p60, %r13, 0;
	@%p60 bra 	BB8_54;

	setp.eq.s32	%p61, %r13, 1;
	@%p61 bra 	BB8_56;
	bra.uni 	BB8_57;

BB8_56:
	mov.u32 	%r234, %r141;
	bra.uni 	BB8_61;

BB8_54:
	mov.f64 	%fd249, %fd252;
	mov.u32 	%r237, %r141;
	mov.f64 	%fd252, %fd138;
	bra.uni 	BB8_62;

BB8_57:
	setp.eq.s32	%p62, %r13, 2;
	@%p62 bra 	BB8_58;
	bra.uni 	BB8_59;

BB8_58:
	mov.u32 	%r233, %r141;
	bra.uni 	BB8_60;

BB8_59:
	shl.b32 	%r146, %r15, 3;
	add.s32 	%r148, %r140, %r146;
	ld.shared.f64 	%fd140, [%r148];
	add.f64 	%fd252, %fd252, %fd140;
	mov.u32 	%r233, 1;

BB8_60:
	add.s32 	%r149, %r233, %r15;
	shl.b32 	%r150, %r149, 3;
	add.s32 	%r152, %r140, %r150;
	ld.shared.f64 	%fd141, [%r152];
	add.f64 	%fd252, %fd252, %fd141;
	add.s32 	%r234, %r233, 1;

BB8_61:
	add.s32 	%r153, %r234, %r15;
	shl.b32 	%r154, %r153, 3;
	add.s32 	%r156, %r140, %r154;
	ld.shared.f64 	%fd142, [%r156];
	add.f64 	%fd249, %fd252, %fd142;
	add.s32 	%r237, %r234, 1;
	mov.f64 	%fd252, %fd249;

BB8_62:
	setp.lt.u32	%p63, %r1, 4;
	@%p63 bra 	BB8_65;

	mad.lo.s32 	%r157, %r1, %r232, %r237;
	shl.b32 	%r158, %r157, 3;
	add.s32 	%r236, %r140, %r158;
	mov.f64 	%fd252, %fd249;

BB8_64:
	ld.shared.f64 	%fd143, [%r236];
	add.f64 	%fd144, %fd252, %fd143;
	ld.shared.f64 	%fd145, [%r236+8];
	add.f64 	%fd146, %fd144, %fd145;
	ld.shared.f64 	%fd147, [%r236+16];
	add.f64 	%fd148, %fd146, %fd147;
	ld.shared.f64 	%fd149, [%r236+24];
	add.f64 	%fd252, %fd148, %fd149;
	add.s32 	%r236, %r236, 32;
	add.s32 	%r237, %r237, 4;
	setp.lt.s32	%p64, %r237, %r1;
	@%p64 bra 	BB8_64;

BB8_65:
	add.s32 	%r232, %r232, 1;
	setp.lt.s32	%p65, %r232, %r1;
	@%p65 bra 	BB8_53;

BB8_66:
	ld.param.f64 	%fd228, [_Z6getDoGPddd_param_1];
	ld.param.f64 	%fd221, [_Z6getDoGPddd_param_2];
	ld.shared.f64 	%fd150, [%r12];
	div.rn.f64 	%fd151, %fd150, %fd252;
	st.shared.f64 	[%r12], %fd151;
	mul.f64 	%fd55, %fd228, %fd221;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r27}, %fd55;
	}
	abs.f64 	%fd56, %fd55;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd56;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd255, [retval0+0];
	
	//{
	}// Callseq End 6
	setp.lt.s32	%p66, %r27, 0;
	and.pred  	%p4, %p66, %p5;
	@!%p4 bra 	BB8_68;
	bra.uni 	BB8_67;

BB8_67:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r160}, %fd255;
	}
	xor.b32  	%r161, %r160, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r162, %temp}, %fd255;
	}
	mov.b64 	%fd255, {%r162, %r161};

BB8_68:
	setp.eq.f64	%p68, %fd55, 0d0000000000000000;
	@%p68 bra 	BB8_71;
	bra.uni 	BB8_69;

BB8_71:
	mov.f64 	%fd232, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r221}, %fd232;
	}
	selp.b32	%r163, %r27, 0, %p5;
	or.b32  	%r164, %r163, 2146435072;
	setp.lt.s32	%p72, %r221, 0;
	selp.b32	%r165, %r164, %r163, %p72;
	mov.u32 	%r166, 0;
	mov.b64 	%fd255, {%r166, %r165};
	bra.uni 	BB8_72;

BB8_69:
	setp.gt.s32	%p69, %r27, -1;
	@%p69 bra 	BB8_72;

	mov.f64 	%fd227, 0d4000000000000000;
	cvt.rzi.f64.f64	%fd153, %fd227;
	setp.neu.f64	%p70, %fd153, 0d4000000000000000;
	selp.f64	%fd255, 0dFFF8000000000000, %fd255, %p70;

BB8_72:
	add.f64 	%fd256, %fd55, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r167}, %fd256;
	}
	and.b32  	%r168, %r167, 2146435072;
	setp.ne.s32	%p73, %r168, 2146435072;
	@%p73 bra 	BB8_73;

	setp.gtu.f64	%p74, %fd56, 0d7FF0000000000000;
	@%p74 bra 	BB8_82;

	mov.f64 	%fd229, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r218}, %fd229;
	}
	and.b32  	%r169, %r218, 2147483647;
	setp.ne.s32	%p75, %r169, 2146435072;
	@%p75 bra 	BB8_77;

	mov.f64 	%fd226, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r170, %temp}, %fd226;
	}
	setp.eq.s32	%p76, %r170, 0;
	@%p76 bra 	BB8_81;

BB8_77:
	and.b32  	%r171, %r27, 2147483647;
	setp.ne.s32	%p77, %r171, 2146435072;
	@%p77 bra 	BB8_78;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r172, %temp}, %fd55;
	}
	setp.ne.s32	%p78, %r172, 0;
	mov.f64 	%fd256, %fd255;
	@%p78 bra 	BB8_82;

	mov.f64 	%fd230, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r219}, %fd230;
	}
	shr.s32 	%r173, %r219, 31;
	and.b32  	%r174, %r173, -2146435072;
	add.s32 	%r175, %r174, 2146435072;
	or.b32  	%r176, %r175, -2147483648;
	selp.b32	%r177, %r176, %r175, %p4;
	mov.u32 	%r178, 0;
	mov.b64 	%fd256, {%r178, %r177};
	bra.uni 	BB8_82;

BB8_73:
	mov.f64 	%fd256, %fd255;
	bra.uni 	BB8_82;

BB8_78:
	mov.f64 	%fd256, %fd255;
	bra.uni 	BB8_82;

BB8_81:
	mov.f64 	%fd231, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r220}, %fd231;
	}
	setp.gt.f64	%p79, %fd56, 0d3FF0000000000000;
	selp.b32	%r179, 2146435072, 0, %p79;
	xor.b32  	%r180, %r179, 2146435072;
	setp.lt.s32	%p80, %r220, 0;
	selp.b32	%r181, %r180, %r179, %p80;
	setp.eq.f64	%p81, %fd55, 0dBFF0000000000000;
	selp.b32	%r182, 1072693248, %r181, %p81;
	mov.u32 	%r183, 0;
	mov.b64 	%fd256, {%r183, %r182};

BB8_82:
	mov.f64 	%fd225, 0d3FF0000000000000;
	mov.f64 	%fd224, 0d3FE000000000000B;
	mov.f64 	%fd223, 0d3FC5555555555511;
	mov.f64 	%fd222, 0d3FA55555555502A1;
	mov.f64 	%fd220, 0d3F81111111122322;
	mov.f64 	%fd219, 0d3F56C16C1852B7AF;
	mov.f64 	%fd218, 0d3F2A01A014761F65;
	mov.f64 	%fd217, 0d3EFA01997C89EB71;
	mov.f64 	%fd216, 0d3EC71DEE62401315;
	mov.f64 	%fd215, 0d3E928AF3FCA213EA;
	mov.f64 	%fd214, 0d3E5ADE1569CE2BDF;
	mov.f64 	%fd213, 0dBC7ABC9E3B39803F;
	mov.f64 	%fd212, 0dBFE62E42FEFA39EF;
	mov.f64 	%fd211, 0dC338000000000000;
	mov.f64 	%fd210, 0d4338000000000000;
	mov.f64 	%fd209, 0d3FF71547652B82FE;
	add.f64 	%fd155, %fd256, %fd256;
	setp.eq.f64	%p82, %fd55, 0d3FF0000000000000;
	selp.f64	%fd156, 0d4000000000000000, %fd155, %p82;
	div.rn.f64 	%fd67, %fd26, %fd156;
	fma.rn.f64 	%fd159, %fd67, %fd209, %fd210;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r28, %temp}, %fd159;
	}
	add.rn.f64 	%fd161, %fd159, %fd211;
	fma.rn.f64 	%fd163, %fd161, %fd212, %fd67;
	fma.rn.f64 	%fd165, %fd161, %fd213, %fd163;
	fma.rn.f64 	%fd168, %fd214, %fd165, %fd215;
	fma.rn.f64 	%fd170, %fd168, %fd165, %fd216;
	fma.rn.f64 	%fd172, %fd170, %fd165, %fd217;
	fma.rn.f64 	%fd174, %fd172, %fd165, %fd218;
	fma.rn.f64 	%fd176, %fd174, %fd165, %fd219;
	fma.rn.f64 	%fd178, %fd176, %fd165, %fd220;
	fma.rn.f64 	%fd180, %fd178, %fd165, %fd222;
	fma.rn.f64 	%fd182, %fd180, %fd165, %fd223;
	fma.rn.f64 	%fd184, %fd182, %fd165, %fd224;
	fma.rn.f64 	%fd186, %fd184, %fd165, %fd225;
	fma.rn.f64 	%fd187, %fd186, %fd165, %fd225;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r29, %temp}, %fd187;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r30}, %fd187;
	}
	shl.b32 	%r184, %r28, 20;
	add.s32 	%r185, %r30, %r184;
	mov.b64 	%fd257, {%r29, %r185};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r186}, %fd67;
	}
	mov.b32 	 %f4, %r186;
	abs.f32 	%f2, %f4;
	setp.lt.f32	%p83, %f2, 0f4086232B;
	@%p83 bra 	BB8_85;

	setp.lt.f64	%p84, %fd67, 0d0000000000000000;
	add.f64 	%fd188, %fd67, 0d7FF0000000000000;
	selp.f64	%fd257, 0d0000000000000000, %fd188, %p84;
	setp.geu.f32	%p85, %f2, 0f40874800;
	@%p85 bra 	BB8_85;

	shr.u32 	%r187, %r28, 31;
	add.s32 	%r188, %r28, %r187;
	shr.s32 	%r189, %r188, 1;
	shl.b32 	%r190, %r189, 20;
	add.s32 	%r191, %r190, %r30;
	mov.b64 	%fd189, {%r29, %r191};
	sub.s32 	%r192, %r28, %r189;
	shl.b32 	%r193, %r192, 20;
	add.s32 	%r194, %r193, 1072693248;
	mov.u32 	%r195, 0;
	mov.b64 	%fd190, {%r195, %r194};
	mul.f64 	%fd257, %fd189, %fd190;

BB8_85:
	mov.u32 	%r197, _ZZ6getDoGPdddE2g2;
	add.s32 	%r31, %r197, %r139;
	st.shared.f64 	[%r31], %fd257;
	bar.sync 	0;
	mov.f64 	%fd264, 0d0000000000000000;
	@%p59 bra 	BB8_100;

	and.b32  	%r32, %r1, 3;
	mov.u32 	%r198, 0;
	mov.f64 	%fd192, 0d0000000000000000;
	mov.f64 	%fd264, %fd192;
	mov.u32 	%r238, %r198;

BB8_87:
	mul.lo.s32 	%r34, %r238, %r1;
	setp.eq.s32	%p87, %r32, 0;
	@%p87 bra 	BB8_88;

	setp.eq.s32	%p88, %r32, 1;
	@%p88 bra 	BB8_90;
	bra.uni 	BB8_91;

BB8_90:
	mov.u32 	%r240, %r198;
	bra.uni 	BB8_95;

BB8_88:
	mov.f64 	%fd261, %fd264;
	mov.u32 	%r243, %r198;
	mov.f64 	%fd264, %fd192;
	bra.uni 	BB8_96;

BB8_91:
	setp.eq.s32	%p89, %r32, 2;
	@%p89 bra 	BB8_92;
	bra.uni 	BB8_93;

BB8_92:
	mov.u32 	%r239, %r198;
	bra.uni 	BB8_94;

BB8_93:
	shl.b32 	%r203, %r34, 3;
	add.s32 	%r205, %r197, %r203;
	ld.shared.f64 	%fd194, [%r205];
	add.f64 	%fd264, %fd264, %fd194;
	mov.u32 	%r239, 1;

BB8_94:
	add.s32 	%r206, %r239, %r34;
	shl.b32 	%r207, %r206, 3;
	add.s32 	%r209, %r197, %r207;
	ld.shared.f64 	%fd195, [%r209];
	add.f64 	%fd264, %fd264, %fd195;
	add.s32 	%r240, %r239, 1;

BB8_95:
	add.s32 	%r210, %r240, %r34;
	shl.b32 	%r211, %r210, 3;
	add.s32 	%r213, %r197, %r211;
	ld.shared.f64 	%fd196, [%r213];
	add.f64 	%fd261, %fd264, %fd196;
	add.s32 	%r243, %r240, 1;
	mov.f64 	%fd264, %fd261;

BB8_96:
	setp.lt.u32	%p90, %r1, 4;
	@%p90 bra 	BB8_99;

	mad.lo.s32 	%r214, %r1, %r238, %r243;
	shl.b32 	%r215, %r214, 3;
	add.s32 	%r242, %r197, %r215;
	mov.f64 	%fd264, %fd261;

BB8_98:
	ld.shared.f64 	%fd197, [%r242];
	add.f64 	%fd198, %fd264, %fd197;
	ld.shared.f64 	%fd199, [%r242+8];
	add.f64 	%fd200, %fd198, %fd199;
	ld.shared.f64 	%fd201, [%r242+16];
	add.f64 	%fd202, %fd200, %fd201;
	ld.shared.f64 	%fd203, [%r242+24];
	add.f64 	%fd264, %fd202, %fd203;
	add.s32 	%r242, %r242, 32;
	add.s32 	%r243, %r243, 4;
	setp.lt.s32	%p91, %r243, %r1;
	@%p91 bra 	BB8_98;

BB8_99:
	add.s32 	%r238, %r238, 1;
	setp.lt.s32	%p92, %r238, %r1;
	@%p92 bra 	BB8_87;

BB8_100:
	ld.shared.f64 	%fd204, [%r31];
	div.rn.f64 	%fd205, %fd204, %fd264;
	st.shared.f64 	[%r31], %fd205;
	bar.sync 	0;
	mov.u32 	%r228, %tid.x;
	mov.u32 	%r227, %tid.y;
	mad.lo.s32 	%r226, %r227, %r1, %r228;
	mul.lo.s32 	%r217, %r1, %r1;
	setp.gt.s32	%p93, %r226, %r217;
	@%p93 bra 	BB8_102;

	mov.u32 	%r231, %tid.x;
	mov.u32 	%r230, %tid.y;
	mad.lo.s32 	%r229, %r230, %r1, %r231;
	ld.param.u64 	%rd7, [_Z6getDoGPddd_param_0];
	cvta.to.global.u64 	%rd4, %rd7;
	ld.shared.f64 	%fd206, [%r31];
	ld.shared.f64 	%fd207, [%r12];
	sub.f64 	%fd208, %fd206, %fd207;
	mul.wide.s32 	%rd5, %r229, 8;
	add.s64 	%rd6, %rd4, %rd5;
	st.global.f64 	[%rd6], %fd208;

BB8_102:
	ret;
}

	// .globl	_Z5conv2PdS_jjS_jj
.visible .entry _Z5conv2PdS_jjS_jj(
	.param .u64 _Z5conv2PdS_jjS_jj_param_0,
	.param .u64 _Z5conv2PdS_jjS_jj_param_1,
	.param .u32 _Z5conv2PdS_jjS_jj_param_2,
	.param .u32 _Z5conv2PdS_jjS_jj_param_3,
	.param .u64 _Z5conv2PdS_jjS_jj_param_4,
	.param .u32 _Z5conv2PdS_jjS_jj_param_5,
	.param .u32 _Z5conv2PdS_jjS_jj_param_6
)
{
	.reg .pred 	%p<42>;
	.reg .b32 	%r<58>;
	.reg .f64 	%fd<60>;
	.reg .b64 	%rd<25>;


	ld.param.u64 	%rd5, [_Z5conv2PdS_jjS_jj_param_0];
	ld.param.u64 	%rd6, [_Z5conv2PdS_jjS_jj_param_1];
	ld.param.u32 	%r24, [_Z5conv2PdS_jjS_jj_param_2];
	ld.param.u32 	%r25, [_Z5conv2PdS_jjS_jj_param_3];
	ld.param.u64 	%rd7, [_Z5conv2PdS_jjS_jj_param_4];
	ld.param.u32 	%r26, [_Z5conv2PdS_jjS_jj_param_5];
	ld.param.u32 	%r27, [_Z5conv2PdS_jjS_jj_param_6];
	cvta.to.global.u64 	%rd1, %rd7;
	cvta.to.global.u64 	%rd2, %rd6;
	mov.u32 	%r28, %ntid.x;
	mov.u32 	%r29, %ctaid.x;
	mov.u32 	%r30, %tid.x;
	mad.lo.s32 	%r1, %r28, %r29, %r30;
	mov.u32 	%r31, %ntid.y;
	mov.u32 	%r32, %ctaid.y;
	mov.u32 	%r33, %tid.y;
	mad.lo.s32 	%r2, %r31, %r32, %r33;
	setp.ge.u32	%p2, %r2, %r24;
	setp.ge.u32	%p3, %r1, %r25;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB9_37;

	shr.u32 	%r3, %r26, 1;
	neg.s32 	%r4, %r3;
	setp.lt.s32	%p5, %r3, %r4;
	mov.f64 	%fd1, 0d0000000000000000;
	@%p5 bra 	BB9_36;

	max.s32 	%r34, %r3, %r4;
	add.s32 	%r35, %r34, %r3;
	add.s32 	%r5, %r35, 1;
	and.b32  	%r6, %r5, 3;
	sub.s32 	%r7, %r1, %r3;
	mov.u32 	%r36, 1;
	sub.s32 	%r8, %r36, %r3;
	mov.f64 	%fd30, 0d0000000000000000;
	mov.f64 	%fd1, %fd30;
	mov.u32 	%r53, %r4;

BB9_3:
	add.s32 	%r37, %r53, %r3;
	mul.lo.s32 	%r10, %r37, %r27;
	add.s32 	%r11, %r10, %r3;
	add.s32 	%r38, %r53, %r2;
	mul.lo.s32 	%r12, %r38, %r25;
	setp.lt.s32	%p6, %r38, 0;
	setp.ge.u32	%p7, %r38, %r24;
	or.pred  	%p1, %p6, %p7;
	setp.eq.s32	%p8, %r6, 0;
	@%p8 bra 	BB9_4;

	setp.eq.s32	%p9, %r6, 1;
	@%p9 bra 	BB9_6;
	bra.uni 	BB9_7;

BB9_6:
	mov.u32 	%r55, %r4;
	bra.uni 	BB9_17;

BB9_4:
	mov.f64 	%fd53, %fd1;
	mov.u32 	%r57, %r4;
	mov.f64 	%fd1, %fd30;
	bra.uni 	BB9_21;

BB9_7:
	setp.eq.s32	%p10, %r6, 2;
	@%p10 bra 	BB9_8;
	bra.uni 	BB9_9;

BB9_8:
	mov.u32 	%r54, %r4;
	bra.uni 	BB9_13;

BB9_9:
	setp.ge.u32	%p11, %r7, %r25;
	setp.lt.s32	%p12, %r7, 0;
	or.pred  	%p13, %p1, %p12;
	or.pred  	%p14, %p13, %p11;
	@%p14 bra 	BB9_11;
	bra.uni 	BB9_10;

BB9_11:
	add.f64 	%fd1, %fd1, 0d0000000000000000;
	bra.uni 	BB9_12;

BB9_10:
	add.s32 	%r39, %r7, %r12;
	mul.wide.s32 	%rd8, %r39, 8;
	add.s64 	%rd9, %rd2, %rd8;
	mul.wide.s32 	%rd10, %r10, 8;
	add.s64 	%rd11, %rd1, %rd10;
	ld.global.f64 	%fd32, [%rd11];
	ld.global.f64 	%fd33, [%rd9];
	fma.rn.f64 	%fd1, %fd33, %fd32, %fd1;

BB9_12:
	mov.u32 	%r54, %r8;

BB9_13:
	add.s32 	%r14, %r54, %r1;
	setp.lt.s32	%p15, %r14, 0;
	or.pred  	%p16, %p1, %p15;
	setp.ge.u32	%p17, %r14, %r25;
	or.pred  	%p18, %p16, %p17;
	@%p18 bra 	BB9_15;
	bra.uni 	BB9_14;

BB9_15:
	add.f64 	%fd1, %fd1, 0d0000000000000000;
	bra.uni 	BB9_16;

BB9_14:
	add.s32 	%r40, %r11, %r54;
	add.s32 	%r41, %r14, %r12;
	mul.wide.s32 	%rd12, %r41, 8;
	add.s64 	%rd13, %rd2, %rd12;
	mul.wide.s32 	%rd14, %r40, 8;
	add.s64 	%rd15, %rd1, %rd14;
	ld.global.f64 	%fd34, [%rd15];
	ld.global.f64 	%fd35, [%rd13];
	fma.rn.f64 	%fd1, %fd35, %fd34, %fd1;

BB9_16:
	add.s32 	%r55, %r54, 1;

BB9_17:
	add.s32 	%r17, %r55, %r1;
	setp.lt.s32	%p19, %r17, 0;
	or.pred  	%p20, %p1, %p19;
	setp.ge.u32	%p21, %r17, %r25;
	or.pred  	%p22, %p20, %p21;
	@%p22 bra 	BB9_19;
	bra.uni 	BB9_18;

BB9_19:
	add.f64 	%fd53, %fd1, 0d0000000000000000;
	bra.uni 	BB9_20;

BB9_18:
	add.s32 	%r42, %r11, %r55;
	add.s32 	%r43, %r17, %r12;
	mul.wide.s32 	%rd16, %r43, 8;
	add.s64 	%rd17, %rd2, %rd16;
	mul.wide.s32 	%rd18, %r42, 8;
	add.s64 	%rd19, %rd1, %rd18;
	ld.global.f64 	%fd36, [%rd19];
	ld.global.f64 	%fd37, [%rd17];
	fma.rn.f64 	%fd53, %fd37, %fd36, %fd1;

BB9_20:
	add.s32 	%r57, %r55, 1;
	mov.f64 	%fd1, %fd53;

BB9_21:
	setp.lt.u32	%p23, %r5, 4;
	@%p23 bra 	BB9_35;

BB9_22:
	add.s32 	%r44, %r57, %r1;
	add.s32 	%r45, %r44, %r12;
	setp.lt.s32	%p24, %r44, 0;
	or.pred  	%p25, %p1, %p24;
	setp.ge.u32	%p26, %r44, %r25;
	or.pred  	%p27, %p25, %p26;
	mul.wide.s32 	%rd20, %r45, 8;
	add.s64 	%rd3, %rd2, %rd20;
	add.s32 	%r46, %r11, %r57;
	mul.wide.s32 	%rd21, %r46, 8;
	add.s64 	%rd4, %rd1, %rd21;
	@%p27 bra 	BB9_24;
	bra.uni 	BB9_23;

BB9_24:
	add.f64 	%fd54, %fd53, 0d0000000000000000;
	bra.uni 	BB9_25;

BB9_23:
	ld.global.f64 	%fd38, [%rd3];
	ld.global.f64 	%fd39, [%rd4];
	fma.rn.f64 	%fd54, %fd38, %fd39, %fd53;

BB9_25:
	add.s32 	%r48, %r44, 1;
	setp.lt.s32	%p28, %r48, 0;
	or.pred  	%p29, %p1, %p28;
	setp.ge.u32	%p30, %r48, %r25;
	or.pred  	%p31, %p29, %p30;
	@%p31 bra 	BB9_27;
	bra.uni 	BB9_26;

BB9_27:
	add.f64 	%fd55, %fd54, 0d0000000000000000;
	bra.uni 	BB9_28;

BB9_26:
	ld.global.f64 	%fd40, [%rd4+8];
	ld.global.f64 	%fd41, [%rd3+8];
	fma.rn.f64 	%fd55, %fd41, %fd40, %fd54;

BB9_28:
	add.s32 	%r50, %r44, 2;
	setp.lt.s32	%p32, %r50, 0;
	or.pred  	%p33, %p1, %p32;
	setp.ge.u32	%p34, %r50, %r25;
	or.pred  	%p35, %p33, %p34;
	@%p35 bra 	BB9_30;
	bra.uni 	BB9_29;

BB9_30:
	add.f64 	%fd56, %fd55, 0d0000000000000000;
	bra.uni 	BB9_31;

BB9_29:
	ld.global.f64 	%fd42, [%rd4+16];
	ld.global.f64 	%fd43, [%rd3+16];
	fma.rn.f64 	%fd56, %fd43, %fd42, %fd55;

BB9_31:
	add.s32 	%r21, %r57, 3;
	add.s32 	%r51, %r21, %r1;
	setp.lt.s32	%p36, %r51, 0;
	or.pred  	%p37, %p1, %p36;
	setp.ge.u32	%p38, %r51, %r25;
	or.pred  	%p39, %p37, %p38;
	@%p39 bra 	BB9_33;
	bra.uni 	BB9_32;

BB9_33:
	add.f64 	%fd53, %fd56, 0d0000000000000000;
	bra.uni 	BB9_34;

BB9_32:
	ld.global.f64 	%fd44, [%rd4+24];
	ld.global.f64 	%fd45, [%rd3+24];
	fma.rn.f64 	%fd53, %fd45, %fd44, %fd56;

BB9_34:
	add.s32 	%r57, %r57, 4;
	setp.lt.s32	%p40, %r21, %r3;
	mov.f64 	%fd1, %fd53;
	@%p40 bra 	BB9_22;

BB9_35:
	add.s32 	%r23, %r53, 1;
	setp.lt.s32	%p41, %r53, %r3;
	mov.u32 	%r53, %r23;
	@%p41 bra 	BB9_3;

BB9_36:
	cvta.to.global.u64 	%rd22, %rd5;
	mad.lo.s32 	%r52, %r2, %r25, %r1;
	mul.wide.s32 	%rd23, %r52, 8;
	add.s64 	%rd24, %rd22, %rd23;
	st.global.f64 	[%rd24], %fd1;

BB9_37:
	ret;
}

	// .globl	_Z7maxBlurPdS_jjS_jj
.visible .entry _Z7maxBlurPdS_jjS_jj(
	.param .u64 _Z7maxBlurPdS_jjS_jj_param_0,
	.param .u64 _Z7maxBlurPdS_jjS_jj_param_1,
	.param .u32 _Z7maxBlurPdS_jjS_jj_param_2,
	.param .u32 _Z7maxBlurPdS_jjS_jj_param_3,
	.param .u64 _Z7maxBlurPdS_jjS_jj_param_4,
	.param .u32 _Z7maxBlurPdS_jjS_jj_param_5,
	.param .u32 _Z7maxBlurPdS_jjS_jj_param_6
)
{
	.reg .pred 	%p<56>;
	.reg .b32 	%r<58>;
	.reg .f64 	%fd<67>;
	.reg .b64 	%rd<25>;


	ld.param.u64 	%rd5, [_Z7maxBlurPdS_jjS_jj_param_0];
	ld.param.u64 	%rd6, [_Z7maxBlurPdS_jjS_jj_param_1];
	ld.param.u32 	%r24, [_Z7maxBlurPdS_jjS_jj_param_2];
	ld.param.u32 	%r25, [_Z7maxBlurPdS_jjS_jj_param_3];
	ld.param.u64 	%rd7, [_Z7maxBlurPdS_jjS_jj_param_4];
	ld.param.u32 	%r26, [_Z7maxBlurPdS_jjS_jj_param_5];
	ld.param.u32 	%r27, [_Z7maxBlurPdS_jjS_jj_param_6];
	cvta.to.global.u64 	%rd1, %rd7;
	cvta.to.global.u64 	%rd2, %rd6;
	mov.u32 	%r28, %ntid.x;
	mov.u32 	%r29, %ctaid.x;
	mov.u32 	%r30, %tid.x;
	mad.lo.s32 	%r1, %r28, %r29, %r30;
	mov.u32 	%r31, %ntid.y;
	mov.u32 	%r32, %ctaid.y;
	mov.u32 	%r33, %tid.y;
	mad.lo.s32 	%r2, %r31, %r32, %r33;
	setp.ge.u32	%p2, %r2, %r24;
	setp.ge.u32	%p3, %r1, %r25;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB10_37;

	shr.u32 	%r3, %r26, 1;
	neg.s32 	%r4, %r3;
	setp.lt.s32	%p5, %r3, %r4;
	mov.f64 	%fd1, 0dC12E848000000000;
	@%p5 bra 	BB10_36;

	max.s32 	%r34, %r3, %r4;
	add.s32 	%r35, %r34, %r3;
	add.s32 	%r5, %r35, 1;
	and.b32  	%r6, %r5, 3;
	sub.s32 	%r7, %r1, %r3;
	mov.u32 	%r36, 1;
	sub.s32 	%r8, %r36, %r3;
	mov.f64 	%fd1, 0dC12E848000000000;
	mov.u32 	%r53, %r4;

BB10_3:
	add.s32 	%r37, %r53, %r3;
	mul.lo.s32 	%r10, %r37, %r27;
	add.s32 	%r11, %r10, %r3;
	add.s32 	%r38, %r53, %r2;
	mul.lo.s32 	%r12, %r38, %r25;
	setp.lt.s32	%p6, %r38, 0;
	setp.ge.u32	%p7, %r38, %r24;
	or.pred  	%p1, %p6, %p7;
	mov.f64 	%fd31, 0d0000000000000000;
	setp.eq.s32	%p8, %r6, 0;
	@%p8 bra 	BB10_4;

	setp.eq.s32	%p9, %r6, 1;
	@%p9 bra 	BB10_6;
	bra.uni 	BB10_7;

BB10_6:
	mov.u32 	%r55, %r4;
	bra.uni 	BB10_17;

BB10_4:
	mov.f64 	%fd60, %fd1;
	mov.u32 	%r57, %r4;
	mov.f64 	%fd1, %fd31;
	bra.uni 	BB10_21;

BB10_7:
	setp.eq.s32	%p10, %r6, 2;
	@%p10 bra 	BB10_8;
	bra.uni 	BB10_9;

BB10_8:
	mov.u32 	%r54, %r4;
	bra.uni 	BB10_13;

BB10_9:
	setp.ge.u32	%p11, %r7, %r25;
	setp.lt.s32	%p12, %r7, 0;
	or.pred  	%p13, %p1, %p12;
	or.pred  	%p14, %p13, %p11;
	@%p14 bra 	BB10_11;
	bra.uni 	BB10_10;

BB10_11:
	setp.lt.f64	%p16, %fd1, 0d0000000000000000;
	selp.f64	%fd1, 0d0000000000000000, %fd1, %p16;
	bra.uni 	BB10_12;

BB10_10:
	add.s32 	%r39, %r7, %r12;
	mul.wide.s32 	%rd8, %r39, 8;
	add.s64 	%rd9, %rd2, %rd8;
	mul.wide.s32 	%rd10, %r10, 8;
	add.s64 	%rd11, %rd1, %rd10;
	ld.global.f64 	%fd32, [%rd11];
	ld.global.f64 	%fd33, [%rd9];
	mul.f64 	%fd34, %fd33, %fd32;
	setp.lt.f64	%p15, %fd1, %fd34;
	selp.f64	%fd1, %fd34, %fd1, %p15;

BB10_12:
	mov.u32 	%r54, %r8;

BB10_13:
	add.s32 	%r14, %r54, %r1;
	setp.lt.s32	%p17, %r14, 0;
	or.pred  	%p18, %p1, %p17;
	setp.ge.u32	%p19, %r14, %r25;
	or.pred  	%p20, %p18, %p19;
	@%p20 bra 	BB10_15;
	bra.uni 	BB10_14;

BB10_15:
	setp.lt.f64	%p22, %fd1, 0d0000000000000000;
	selp.f64	%fd1, 0d0000000000000000, %fd1, %p22;
	bra.uni 	BB10_16;

BB10_14:
	add.s32 	%r40, %r11, %r54;
	add.s32 	%r41, %r14, %r12;
	mul.wide.s32 	%rd12, %r41, 8;
	add.s64 	%rd13, %rd2, %rd12;
	mul.wide.s32 	%rd14, %r40, 8;
	add.s64 	%rd15, %rd1, %rd14;
	ld.global.f64 	%fd35, [%rd15];
	ld.global.f64 	%fd36, [%rd13];
	mul.f64 	%fd37, %fd36, %fd35;
	setp.lt.f64	%p21, %fd1, %fd37;
	selp.f64	%fd1, %fd37, %fd1, %p21;

BB10_16:
	add.s32 	%r55, %r54, 1;

BB10_17:
	add.s32 	%r17, %r55, %r1;
	setp.lt.s32	%p23, %r17, 0;
	or.pred  	%p24, %p1, %p23;
	setp.ge.u32	%p25, %r17, %r25;
	or.pred  	%p26, %p24, %p25;
	@%p26 bra 	BB10_19;
	bra.uni 	BB10_18;

BB10_19:
	setp.lt.f64	%p28, %fd1, 0d0000000000000000;
	selp.f64	%fd60, 0d0000000000000000, %fd1, %p28;
	bra.uni 	BB10_20;

BB10_18:
	add.s32 	%r42, %r11, %r55;
	add.s32 	%r43, %r17, %r12;
	mul.wide.s32 	%rd16, %r43, 8;
	add.s64 	%rd17, %rd2, %rd16;
	mul.wide.s32 	%rd18, %r42, 8;
	add.s64 	%rd19, %rd1, %rd18;
	ld.global.f64 	%fd38, [%rd19];
	ld.global.f64 	%fd39, [%rd17];
	mul.f64 	%fd40, %fd39, %fd38;
	setp.lt.f64	%p27, %fd1, %fd40;
	selp.f64	%fd60, %fd40, %fd1, %p27;

BB10_20:
	add.s32 	%r57, %r55, 1;
	mov.f64 	%fd1, %fd60;

BB10_21:
	setp.lt.u32	%p29, %r5, 4;
	@%p29 bra 	BB10_35;

BB10_22:
	add.s32 	%r44, %r57, %r1;
	add.s32 	%r45, %r44, %r12;
	setp.lt.s32	%p30, %r44, 0;
	or.pred  	%p31, %p1, %p30;
	setp.ge.u32	%p32, %r44, %r25;
	or.pred  	%p33, %p31, %p32;
	mul.wide.s32 	%rd20, %r45, 8;
	add.s64 	%rd3, %rd2, %rd20;
	add.s32 	%r46, %r11, %r57;
	mul.wide.s32 	%rd21, %r46, 8;
	add.s64 	%rd4, %rd1, %rd21;
	@%p33 bra 	BB10_24;
	bra.uni 	BB10_23;

BB10_24:
	setp.lt.f64	%p35, %fd60, 0d0000000000000000;
	selp.f64	%fd61, 0d0000000000000000, %fd60, %p35;
	bra.uni 	BB10_25;

BB10_23:
	ld.global.f64 	%fd41, [%rd3];
	ld.global.f64 	%fd42, [%rd4];
	mul.f64 	%fd43, %fd41, %fd42;
	setp.lt.f64	%p34, %fd60, %fd43;
	selp.f64	%fd61, %fd43, %fd60, %p34;

BB10_25:
	add.s32 	%r48, %r44, 1;
	setp.lt.s32	%p36, %r48, 0;
	or.pred  	%p37, %p1, %p36;
	setp.ge.u32	%p38, %r48, %r25;
	or.pred  	%p39, %p37, %p38;
	@%p39 bra 	BB10_27;
	bra.uni 	BB10_26;

BB10_27:
	setp.lt.f64	%p41, %fd61, 0d0000000000000000;
	selp.f64	%fd62, 0d0000000000000000, %fd61, %p41;
	bra.uni 	BB10_28;

BB10_26:
	ld.global.f64 	%fd44, [%rd4+8];
	ld.global.f64 	%fd45, [%rd3+8];
	mul.f64 	%fd46, %fd45, %fd44;
	setp.lt.f64	%p40, %fd61, %fd46;
	selp.f64	%fd62, %fd46, %fd61, %p40;

BB10_28:
	add.s32 	%r50, %r44, 2;
	setp.lt.s32	%p42, %r50, 0;
	or.pred  	%p43, %p1, %p42;
	setp.ge.u32	%p44, %r50, %r25;
	or.pred  	%p45, %p43, %p44;
	@%p45 bra 	BB10_30;
	bra.uni 	BB10_29;

BB10_30:
	setp.lt.f64	%p47, %fd62, 0d0000000000000000;
	selp.f64	%fd63, 0d0000000000000000, %fd62, %p47;
	bra.uni 	BB10_31;

BB10_29:
	ld.global.f64 	%fd47, [%rd4+16];
	ld.global.f64 	%fd48, [%rd3+16];
	mul.f64 	%fd49, %fd48, %fd47;
	setp.lt.f64	%p46, %fd62, %fd49;
	selp.f64	%fd63, %fd49, %fd62, %p46;

BB10_31:
	add.s32 	%r21, %r57, 3;
	add.s32 	%r51, %r21, %r1;
	setp.lt.s32	%p48, %r51, 0;
	or.pred  	%p49, %p1, %p48;
	setp.ge.u32	%p50, %r51, %r25;
	or.pred  	%p51, %p49, %p50;
	@%p51 bra 	BB10_33;
	bra.uni 	BB10_32;

BB10_33:
	setp.lt.f64	%p53, %fd63, 0d0000000000000000;
	selp.f64	%fd60, 0d0000000000000000, %fd63, %p53;
	bra.uni 	BB10_34;

BB10_32:
	ld.global.f64 	%fd50, [%rd4+24];
	ld.global.f64 	%fd51, [%rd3+24];
	mul.f64 	%fd52, %fd51, %fd50;
	setp.lt.f64	%p52, %fd63, %fd52;
	selp.f64	%fd60, %fd52, %fd63, %p52;

BB10_34:
	add.s32 	%r57, %r57, 4;
	setp.lt.s32	%p54, %r21, %r3;
	mov.f64 	%fd1, %fd60;
	@%p54 bra 	BB10_22;

BB10_35:
	add.s32 	%r23, %r53, 1;
	setp.lt.s32	%p55, %r53, %r3;
	mov.u32 	%r53, %r23;
	@%p55 bra 	BB10_3;

BB10_36:
	cvta.to.global.u64 	%rd22, %rd5;
	mad.lo.s32 	%r52, %r2, %r25, %r1;
	mul.wide.s32 	%rd23, %r52, 8;
	add.s64 	%rd24, %rd22, %rd23;
	st.global.f64 	[%rd24], %fd1;

BB10_37:
	ret;
}

	// .globl	_Z11shiftPixelsPdS_jjdd
.visible .entry _Z11shiftPixelsPdS_jjdd(
	.param .u64 _Z11shiftPixelsPdS_jjdd_param_0,
	.param .u64 _Z11shiftPixelsPdS_jjdd_param_1,
	.param .u32 _Z11shiftPixelsPdS_jjdd_param_2,
	.param .u32 _Z11shiftPixelsPdS_jjdd_param_3,
	.param .f64 _Z11shiftPixelsPdS_jjdd_param_4,
	.param .f64 _Z11shiftPixelsPdS_jjdd_param_5
)
{
	.local .align 4 .b8 	__local_depot11[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<24>;
	.reg .b32 	%r<70>;
	.reg .f64 	%fd<102>;
	.reg .b64 	%rd<23>;


	mov.u64 	%SPL, __local_depot11;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd1, [_Z11shiftPixelsPdS_jjdd_param_0];
	ld.param.u64 	%rd2, [_Z11shiftPixelsPdS_jjdd_param_1];
	ld.param.u32 	%r13, [_Z11shiftPixelsPdS_jjdd_param_2];
	ld.param.u32 	%r14, [_Z11shiftPixelsPdS_jjdd_param_3];
	ld.param.f64 	%fd34, [_Z11shiftPixelsPdS_jjdd_param_4];
	ld.param.f64 	%fd97, [_Z11shiftPixelsPdS_jjdd_param_5];
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	mov.u32 	%r18, %ntid.y;
	mov.u32 	%r19, %ctaid.y;
	mov.u32 	%r20, %tid.y;
	mad.lo.s32 	%r2, %r18, %r19, %r20;
	setp.ge.u32	%p1, %r2, %r13;
	setp.ge.u32	%p2, %r1, %r14;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB11_26;

	cvta.to.global.u64 	%rd3, %rd2;
	mad.lo.s32 	%r21, %r2, %r14, %r1;
	mul.wide.s32 	%rd4, %r21, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd97;
	}
	and.b32  	%r3, %r22, 2147483647;
	setp.ne.s32	%p4, %r3, 2146435072;
	mov.f64 	%fd92, %fd97;
	@%p4 bra 	BB11_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd97;
	}
	setp.ne.s32	%p5, %r23, 0;
	mov.f64 	%fd92, %fd97;
	@%p5 bra 	BB11_4;

	mov.f64 	%fd36, 0d0000000000000000;
	mul.rn.f64 	%fd92, %fd97, %fd36;

BB11_4:
	mul.f64 	%fd37, %fd92, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r68, %fd37;
	add.u64 	%rd6, %SP, 4;
	cvta.to.local.u64 	%rd7, %rd6;
	st.local.u32 	[%rd7], %r68;
	cvt.rn.f64.s32	%fd38, %r68;
	neg.f64 	%fd39, %fd38;
	mov.f64 	%fd40, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd41, %fd39, %fd40, %fd92;
	mov.f64 	%fd42, 0d3C91A62633145C00;
	fma.rn.f64 	%fd43, %fd39, %fd42, %fd41;
	mov.f64 	%fd44, 0d397B839A252049C0;
	fma.rn.f64 	%fd93, %fd39, %fd44, %fd43;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r24}, %fd92;
	}
	and.b32  	%r25, %r24, 2145386496;
	setp.lt.u32	%p6, %r25, 1105199104;
	@%p6 bra 	BB11_6;

	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd92;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd93, [retval0+0];
	
	//{
	}// Callseq End 7
	ld.local.u32 	%r68, [%rd7];

BB11_6:
	add.s32 	%r7, %r68, 1;
	and.b32  	%r26, %r7, 1;
	shl.b32 	%r27, %r26, 3;
	setp.eq.s32	%p7, %r26, 0;
	selp.f64	%fd45, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p7;
	add.s32 	%r28, %r27, 1;
	mul.wide.s32 	%rd10, %r28, 8;
	mov.u64 	%rd11, __cudart_sin_cos_coeffs;
	add.s64 	%rd12, %rd11, %rd10;
	ld.const.f64 	%fd46, [%rd12];
	mul.rn.f64 	%fd7, %fd93, %fd93;
	fma.rn.f64 	%fd47, %fd45, %fd7, %fd46;
	ld.const.f64 	%fd48, [%rd12+8];
	fma.rn.f64 	%fd49, %fd47, %fd7, %fd48;
	ld.const.f64 	%fd50, [%rd12+16];
	fma.rn.f64 	%fd51, %fd49, %fd7, %fd50;
	ld.const.f64 	%fd52, [%rd12+24];
	fma.rn.f64 	%fd53, %fd51, %fd7, %fd52;
	ld.const.f64 	%fd54, [%rd12+32];
	fma.rn.f64 	%fd55, %fd53, %fd7, %fd54;
	ld.const.f64 	%fd56, [%rd12+40];
	fma.rn.f64 	%fd8, %fd55, %fd7, %fd56;
	fma.rn.f64 	%fd94, %fd8, %fd93, %fd93;
	@%p7 bra 	BB11_8;

	mov.f64 	%fd57, 0d3FF0000000000000;
	fma.rn.f64 	%fd94, %fd8, %fd7, %fd57;

BB11_8:
	and.b32  	%r29, %r7, 2;
	setp.eq.s32	%p8, %r29, 0;
	@%p8 bra 	BB11_10;

	mov.f64 	%fd58, 0d0000000000000000;
	mov.f64 	%fd59, 0dBFF0000000000000;
	fma.rn.f64 	%fd94, %fd94, %fd59, %fd58;

BB11_10:
	mul.f64 	%fd60, %fd94, %fd34;
	neg.f64 	%fd96, %fd60;
	abs.f64 	%fd15, %fd96;
	setp.ge.f64	%p9, %fd15, 0d4330000000000000;
	@%p9 bra 	BB11_12;

	add.f64 	%fd61, %fd15, 0d3FE0000000000000;
	cvt.rzi.f64.f64	%fd62, %fd61;
	setp.lt.f64	%p10, %fd15, 0d3FE0000000000000;
	selp.f64	%fd63, 0d0000000000000000, %fd62, %p10;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r30, %temp}, %fd63;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r31}, %fd63;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r32}, %fd96;
	}
	and.b32  	%r33, %r32, -2147483648;
	or.b32  	%r34, %r31, %r33;
	mov.b64 	%fd96, {%r30, %r34};

BB11_12:
	cvt.rzi.s32.f64	%r8, %fd96;
	@%p4 bra 	BB11_15;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r35, %temp}, %fd97;
	}
	setp.ne.s32	%p12, %r35, 0;
	@%p12 bra 	BB11_15;

	mov.f64 	%fd64, 0d0000000000000000;
	mul.rn.f64 	%fd97, %fd97, %fd64;

BB11_15:
	mul.f64 	%fd65, %fd97, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r69, %fd65;
	add.u64 	%rd13, %SP, 0;
	cvta.to.local.u64 	%rd14, %rd13;
	st.local.u32 	[%rd14], %r69;
	cvt.rn.f64.s32	%fd66, %r69;
	neg.f64 	%fd67, %fd66;
	fma.rn.f64 	%fd69, %fd67, %fd40, %fd97;
	fma.rn.f64 	%fd71, %fd67, %fd42, %fd69;
	fma.rn.f64 	%fd98, %fd67, %fd44, %fd71;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r36}, %fd97;
	}
	and.b32  	%r37, %r36, 2145386496;
	setp.lt.u32	%p13, %r37, 1105199104;
	@%p13 bra 	BB11_17;

	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd97;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd98, [retval0+0];
	
	//{
	}// Callseq End 8
	ld.local.u32 	%r69, [%rd14];

BB11_17:
	and.b32  	%r38, %r69, 1;
	shl.b32 	%r39, %r38, 3;
	setp.eq.s32	%p14, %r38, 0;
	selp.f64	%fd73, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p14;
	add.s32 	%r40, %r39, 1;
	mul.wide.s32 	%rd17, %r40, 8;
	add.s64 	%rd19, %rd11, %rd17;
	ld.const.f64 	%fd74, [%rd19];
	mul.rn.f64 	%fd23, %fd98, %fd98;
	fma.rn.f64 	%fd75, %fd73, %fd23, %fd74;
	ld.const.f64 	%fd76, [%rd19+8];
	fma.rn.f64 	%fd77, %fd75, %fd23, %fd76;
	ld.const.f64 	%fd78, [%rd19+16];
	fma.rn.f64 	%fd79, %fd77, %fd23, %fd78;
	ld.const.f64 	%fd80, [%rd19+24];
	fma.rn.f64 	%fd81, %fd79, %fd23, %fd80;
	ld.const.f64 	%fd82, [%rd19+32];
	fma.rn.f64 	%fd83, %fd81, %fd23, %fd82;
	ld.const.f64 	%fd84, [%rd19+40];
	fma.rn.f64 	%fd24, %fd83, %fd23, %fd84;
	fma.rn.f64 	%fd99, %fd24, %fd98, %fd98;
	@%p14 bra 	BB11_19;

	mov.f64 	%fd85, 0d3FF0000000000000;
	fma.rn.f64 	%fd99, %fd24, %fd23, %fd85;

BB11_19:
	and.b32  	%r41, %r69, 2;
	setp.eq.s32	%p15, %r41, 0;
	@%p15 bra 	BB11_21;

	mov.f64 	%fd86, 0d0000000000000000;
	mov.f64 	%fd87, 0dBFF0000000000000;
	fma.rn.f64 	%fd99, %fd99, %fd87, %fd86;

BB11_21:
	mul.f64 	%fd88, %fd99, %fd34;
	neg.f64 	%fd101, %fd88;
	abs.f64 	%fd31, %fd101;
	setp.ge.f64	%p16, %fd31, 0d4330000000000000;
	@%p16 bra 	BB11_23;

	add.f64 	%fd89, %fd31, 0d3FE0000000000000;
	cvt.rzi.f64.f64	%fd90, %fd89;
	setp.lt.f64	%p17, %fd31, 0d3FE0000000000000;
	selp.f64	%fd91, 0d0000000000000000, %fd90, %p17;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r42, %temp}, %fd91;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r43}, %fd91;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r44}, %fd101;
	}
	and.b32  	%r45, %r44, -2147483648;
	or.b32  	%r46, %r43, %r45;
	mov.b64 	%fd101, {%r42, %r46};

BB11_23:
	cvt.rzi.s32.f64	%r12, %fd101;
	add.s32 	%r51, %r12, %r1;
	setp.lt.s32	%p18, %r51, 0;
	setp.ge.u32	%p19, %r51, %r14;
	or.pred  	%p20, %p18, %p19;
	@%p20 bra 	BB11_26;

	add.s32 	%r56, %r8, %r2;
	setp.lt.s32	%p21, %r56, 0;
	setp.ge.u32	%p22, %r56, %r13;
	or.pred  	%p23, %p21, %p22;
	@%p23 bra 	BB11_26;

	mad.lo.s32 	%r66, %r8, %r14, %r21;
	add.s32 	%r67, %r66, %r12;
	cvta.to.global.u64 	%rd20, %rd1;
	mul.wide.s32 	%rd21, %r67, 8;
	add.s64 	%rd22, %rd20, %rd21;
	st.global.f64 	[%rd22], %fd1;

BB11_26:
	ret;
}

	// .globl	_Z12COSFIRE_CUDAPdS_jjS_jS_dd
.visible .entry _Z12COSFIRE_CUDAPdS_jjS_jS_dd(
	.param .u64 _Z12COSFIRE_CUDAPdS_jjS_jS_dd_param_0,
	.param .u64 _Z12COSFIRE_CUDAPdS_jjS_jS_dd_param_1,
	.param .u32 _Z12COSFIRE_CUDAPdS_jjS_jS_dd_param_2,
	.param .u32 _Z12COSFIRE_CUDAPdS_jjS_jS_dd_param_3,
	.param .u64 _Z12COSFIRE_CUDAPdS_jjS_jS_dd_param_4,
	.param .u32 _Z12COSFIRE_CUDAPdS_jjS_jS_dd_param_5,
	.param .u64 _Z12COSFIRE_CUDAPdS_jjS_jS_dd_param_6,
	.param .f64 _Z12COSFIRE_CUDAPdS_jjS_jS_dd_param_7,
	.param .f64 _Z12COSFIRE_CUDAPdS_jjS_jS_dd_param_8
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<16>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd4, [_Z12COSFIRE_CUDAPdS_jjS_jS_dd_param_0];
	ld.param.u64 	%rd5, [_Z12COSFIRE_CUDAPdS_jjS_jS_dd_param_1];
	ld.param.u32 	%r2, [_Z12COSFIRE_CUDAPdS_jjS_jS_dd_param_2];
	ld.param.u32 	%r3, [_Z12COSFIRE_CUDAPdS_jjS_jS_dd_param_3];
	ld.param.u64 	%rd6, [_Z12COSFIRE_CUDAPdS_jjS_jS_dd_param_4];
	ld.param.f64 	%fd2, [_Z12COSFIRE_CUDAPdS_jjS_jS_dd_param_8];
	cvta.to.global.u64 	%rd7, %rd6;
	mov.u32 	%r4, %tid.x;
	mul.lo.s32 	%r5, %r4, 3;
	mul.wide.u32 	%rd8, %r5, 8;
	add.s64 	%rd9, %rd7, %rd8;
	ld.const.u32 	%r6, [MAXSIZE];
	mul.wide.s32 	%rd10, %r6, 8;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 retval0;
	call.uni (retval0), 
	malloc, 
	(
	param0
	);
	ld.param.b64	%rd1, [retval0+0];
	
	//{
	}// Callseq End 9
	ld.global.f64 	%fd1, [%rd9];
	mul.f64 	%fd3, %fd1, 0d4008000000000000;
	cvt.rpi.f64.f64	%fd4, %fd3;
	fma.rn.f64 	%fd5, %fd4, 0d4000000000000000, 0d3FF0000000000000;
	cvt.rzi.s32.f64	%r1, %fd5;
	mov.u64 	%rd11, _Z6getDoGPddd;
	mov.u32 	%r7, 512;
	mov.u32 	%r8, 1;
	mov.u32 	%r9, 0;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .align 4 .b8 param1[12];
	st.param.b32	[param1+0], %r8;
	st.param.b32	[param1+4], %r8;
	st.param.b32	[param1+8], %r8;
	.param .align 4 .b8 param2[12];
	st.param.b32	[param2+0], %r7;
	st.param.b32	[param2+4], %r8;
	st.param.b32	[param2+8], %r8;
	.param .b32 param3;
	st.param.b32	[param3+0], %r9;
	.param .b64 retval0;
	call.uni (retval0), 
	cudaGetParameterBufferV2, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	ld.param.b64	%rd2, [retval0+0];
	
	//{
	}// Callseq End 10
	setp.eq.s64	%p1, %rd2, 0;
	@%p1 bra 	BB12_2;

	st.u64 	[%rd2], %rd1;
	st.f64 	[%rd2+8], %fd1;
	st.f64 	[%rd2+16], %fd2;
	mov.u64 	%rd12, 0;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 retval0;
	call.uni (retval0), 
	cudaLaunchDeviceV2, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r10, [retval0+0];
	
	//{
	}// Callseq End 11

BB12_2:
	bar.sync 	0;
	mov.u64 	%rd13, _Z5conv2PdS_jjS_jj;
	mov.u32 	%r11, 600;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .align 4 .b8 param1[12];
	st.param.b32	[param1+0], %r11;
	st.param.b32	[param1+4], %r8;
	st.param.b32	[param1+8], %r8;
	.param .align 4 .b8 param2[12];
	st.param.b32	[param2+0], %r7;
	st.param.b32	[param2+4], %r8;
	st.param.b32	[param2+8], %r8;
	.param .b32 param3;
	st.param.b32	[param3+0], %r9;
	.param .b64 retval0;
	call.uni (retval0), 
	cudaGetParameterBufferV2, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	ld.param.b64	%rd3, [retval0+0];
	
	//{
	}// Callseq End 12
	setp.eq.s64	%p2, %rd3, 0;
	@%p2 bra 	BB12_4;

	st.u64 	[%rd3], %rd4;
	st.u64 	[%rd3+8], %rd5;
	st.u64 	[%rd3+24], %rd1;
	st.v2.u32 	[%rd3+16], {%r2, %r3};
	st.v2.u32 	[%rd3+32], {%r1, %r1};
	mov.u64 	%rd14, 0;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 retval0;
	call.uni (retval0), 
	cudaLaunchDeviceV2, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r15, [retval0+0];
	
	//{
	}// Callseq End 13

BB12_4:
	ret;
}

.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot13[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<42>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<101>;


	mov.u64 	%SPL, __local_depot13;
	cvta.local.u64 	%SP, %SPL;
	ld.param.f64 	%fd4, [__internal_trig_reduction_slowpathd_param_0];
	ld.param.u64 	%rd37, [__internal_trig_reduction_slowpathd_param_1];
	add.u64 	%rd38, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd38;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd4;
	}
	and.b32  	%r40, %r1, -2147483648;
	shr.u32 	%r3, %r1, 20;
	bfe.u32 	%r4, %r1, 20, 11;
	setp.eq.s32	%p1, %r4, 2047;
	@%p1 bra 	BB13_13;

	add.s32 	%r15, %r4, -1024;
	shr.u32 	%r16, %r15, 6;
	mov.u32 	%r17, 15;
	sub.s32 	%r5, %r17, %r16;
	mov.u32 	%r18, 19;
	sub.s32 	%r19, %r18, %r16;
	mov.u32 	%r20, 18;
	min.s32 	%r6, %r20, %r19;
	mov.u64 	%rd94, 0;
	setp.ge.s32	%p2, %r5, %r6;
	mov.u64 	%rd93, %rd1;
	@%p2 bra 	BB13_4;

	bfe.u32 	%r21, %r1, 20, 11;
	add.s32 	%r22, %r21, -1024;
	shr.u32 	%r23, %r22, 6;
	sub.s32 	%r25, %r17, %r23;
	mul.wide.s32 	%rd41, %r25, 8;
	mov.u64 	%rd42, __cudart_i2opi_d;
	add.s64 	%rd89, %rd42, %rd41;
	mov.b64 	 %rd43, %fd4;
	shl.b64 	%rd44, %rd43, 11;
	or.b64  	%rd5, %rd44, -9223372036854775808;
	mov.u64 	%rd94, 0;
	mov.u64 	%rd93, %rd1;
	mov.u64 	%rd91, %rd1;
	mov.u32 	%r39, %r5;

BB13_3:
	.pragma "nounroll";
	ld.const.u64 	%rd47, [%rd89];
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi, clo, chi;
	mov.b64         {alo,ahi}, %rd47;    
	mov.b64         {blo,bhi}, %rd5;    
	mov.b64         {clo,chi}, %rd94;    
	mad.lo.cc.u32   r0, alo, blo, clo;
	madc.hi.cc.u32  r1, alo, blo, chi;
	madc.hi.u32     r2, alo, bhi,   0;
	mad.lo.cc.u32   r1, alo, bhi,  r1;
	madc.hi.cc.u32  r2, ahi, blo,  r2;
	madc.hi.u32     r3, ahi, bhi,   0;
	mad.lo.cc.u32   r1, ahi, blo,  r1;
	madc.lo.cc.u32  r2, ahi, bhi,  r2;
	addc.u32        r3,  r3,   0;     
	mov.b64         %rd45, {r0,r1};      
	mov.b64         %rd94, {r2,r3};      
	}
	// inline asm
	st.local.u64 	[%rd91], %rd45;
	add.s32 	%r39, %r39, 1;
	sub.s32 	%r26, %r39, %r5;
	mul.wide.s32 	%rd50, %r26, 8;
	add.s64 	%rd91, %rd1, %rd50;
	add.s64 	%rd93, %rd93, 8;
	add.s64 	%rd89, %rd89, 8;
	setp.lt.s32	%p3, %r39, %r6;
	@%p3 bra 	BB13_3;

BB13_4:
	st.local.u64 	[%rd93], %rd94;
	ld.local.u64 	%rd95, [%rd1+16];
	ld.local.u64 	%rd96, [%rd1+24];
	and.b32  	%r9, %r3, 63;
	setp.eq.s32	%p4, %r9, 0;
	@%p4 bra 	BB13_6;

	mov.u32 	%r27, 64;
	sub.s32 	%r28, %r27, %r9;
	shl.b64 	%rd51, %rd96, %r9;
	shr.u64 	%rd52, %rd95, %r28;
	or.b64  	%rd96, %rd51, %rd52;
	shl.b64 	%rd53, %rd95, %r9;
	ld.local.u64 	%rd54, [%rd1+8];
	shr.u64 	%rd55, %rd54, %r28;
	or.b64  	%rd95, %rd55, %rd53;

BB13_6:
	shr.u64 	%rd56, %rd96, 62;
	cvt.u32.u64	%r29, %rd56;
	shr.u64 	%rd57, %rd95, 62;
	shl.b64 	%rd58, %rd96, 2;
	or.b64  	%rd98, %rd58, %rd57;
	shl.b64 	%rd97, %rd95, 2;
	shr.u64 	%rd59, %rd96, 61;
	cvt.u32.u64	%r30, %rd59;
	and.b32  	%r31, %r30, 1;
	add.s32 	%r32, %r31, %r29;
	neg.s32 	%r33, %r32;
	setp.eq.s32	%p5, %r40, 0;
	selp.b32	%r34, %r32, %r33, %p5;
	cvta.to.local.u64 	%rd60, %rd37;
	st.local.u32 	[%rd60], %r34;
	setp.eq.s32	%p6, %r31, 0;
	@%p6 bra 	BB13_8;

	mov.u64 	%rd64, 0;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd64;
	mov.b64         {a2,a3}, %rd64;
	mov.b64         {b0,b1}, %rd97;
	mov.b64         {b2,b3}, %rd98;
	sub.cc.u32      r0, a0, b0; 
	subc.cc.u32     r1, a1, b1; 
	subc.cc.u32     r2, a2, b2; 
	subc.u32        r3, a3, b3; 
	mov.b64         %rd97, {r0,r1};
	mov.b64         %rd98, {r2,r3};
	}
	// inline asm
	xor.b32  	%r40, %r40, -2147483648;

BB13_8:
	clz.b64 	%r41, %rd98;
	setp.eq.s32	%p7, %r41, 0;
	@%p7 bra 	BB13_10;

	shl.b64 	%rd67, %rd98, %r41;
	mov.u32 	%r35, 64;
	sub.s32 	%r36, %r35, %r41;
	shr.u64 	%rd68, %rd97, %r36;
	or.b64  	%rd98, %rd68, %rd67;

BB13_10:
	mov.u64 	%rd72, -3958705157555305931;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi;
	mov.b64         {alo,ahi}, %rd98;   
	mov.b64         {blo,bhi}, %rd72;   
	mul.lo.u32      r0, alo, blo;    
	mul.hi.u32      r1, alo, blo;    
	mad.lo.cc.u32   r1, alo, bhi, r1;
	madc.hi.u32     r2, alo, bhi,  0;
	mad.lo.cc.u32   r1, ahi, blo, r1;
	madc.hi.cc.u32  r2, ahi, blo, r2;
	madc.hi.u32     r3, ahi, bhi,  0;
	mad.lo.cc.u32   r2, ahi, bhi, r2;
	addc.u32        r3, r3,  0;      
	mov.b64         %rd69, {r0,r1};     
	mov.b64         %rd100, {r2,r3};     
	}
	// inline asm
	setp.lt.s64	%p8, %rd100, 1;
	@%p8 bra 	BB13_12;

	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd69;
	mov.b64         {a2,a3}, %rd100;
	mov.b64         {b0,b1}, %rd69;
	mov.b64         {b2,b3}, %rd100;
	add.cc.u32      r0, a0, b0; 
	addc.cc.u32     r1, a1, b1; 
	addc.cc.u32     r2, a2, b2; 
	addc.u32        r3, a3, b3; 
	mov.b64         %rd73, {r0,r1};
	mov.b64         %rd100, {r2,r3};
	}
	// inline asm
	add.s32 	%r41, %r41, 1;

BB13_12:
	cvt.u64.u32	%rd79, %r40;
	shl.b64 	%rd80, %rd79, 32;
	mov.u32 	%r37, 1022;
	sub.s32 	%r38, %r37, %r41;
	cvt.u64.u32	%rd81, %r38;
	shl.b64 	%rd82, %rd81, 52;
	add.s64 	%rd83, %rd100, 1;
	shr.u64 	%rd84, %rd83, 10;
	add.s64 	%rd85, %rd84, 1;
	shr.u64 	%rd86, %rd85, 1;
	add.s64 	%rd87, %rd86, %rd82;
	or.b64  	%rd88, %rd87, %rd80;
	mov.b64 	 %fd4, %rd88;

BB13_13:
	st.param.f64	[func_retval0+0], %fd4;
	ret;
}

.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<138>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd12;
	}
	shr.u32 	%r51, %r50, 20;
	setp.ne.s32	%p1, %r51, 0;
	@%p1 bra 	BB14_2;

	mul.f64 	%fd13, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd13;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd13;
	}
	shr.u32 	%r16, %r50, 20;
	add.s32 	%r51, %r16, -54;

BB14_2:
	add.s32 	%r52, %r51, -1023;
	and.b32  	%r17, %r50, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd135, {%r49, %r18};
	setp.lt.u32	%p2, %r18, 1073127583;
	@%p2 bra 	BB14_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd135;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd135;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd135, {%r19, %r21};
	add.s32 	%r52, %r51, -1022;

BB14_4:
	add.f64 	%fd14, %fd135, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd15, %fd14;
	neg.f64 	%fd16, %fd14;
	mov.f64 	%fd17, 0d3FF0000000000000;
	fma.rn.f64 	%fd18, %fd16, %fd15, %fd17;
	fma.rn.f64 	%fd19, %fd18, %fd18, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd15, %fd15;
	add.f64 	%fd21, %fd135, 0dBFF0000000000000;
	mul.f64 	%fd22, %fd21, %fd20;
	fma.rn.f64 	%fd23, %fd21, %fd20, %fd22;
	mul.f64 	%fd24, %fd23, %fd23;
	mov.f64 	%fd25, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd26, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd27, %fd26, %fd24, %fd25;
	mov.f64 	%fd28, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd29, %fd27, %fd24, %fd28;
	mov.f64 	%fd30, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd31, %fd29, %fd24, %fd30;
	mov.f64 	%fd32, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd33, %fd31, %fd24, %fd32;
	mov.f64 	%fd34, 0d3F6249249242B910;
	fma.rn.f64 	%fd35, %fd33, %fd24, %fd34;
	mov.f64 	%fd36, 0d3F89999999999DFB;
	fma.rn.f64 	%fd37, %fd35, %fd24, %fd36;
	sub.f64 	%fd38, %fd21, %fd23;
	add.f64 	%fd39, %fd38, %fd38;
	neg.f64 	%fd40, %fd23;
	fma.rn.f64 	%fd41, %fd40, %fd21, %fd39;
	mul.f64 	%fd42, %fd20, %fd41;
	fma.rn.f64 	%fd43, %fd24, %fd37, 0d3FB5555555555555;
	mov.f64 	%fd44, 0d3FB5555555555555;
	sub.f64 	%fd45, %fd44, %fd43;
	fma.rn.f64 	%fd46, %fd24, %fd37, %fd45;
	add.f64 	%fd47, %fd46, 0d0000000000000000;
	add.f64 	%fd48, %fd47, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd49, %fd43, %fd48;
	sub.f64 	%fd50, %fd43, %fd49;
	add.f64 	%fd51, %fd48, %fd50;
	mul.rn.f64 	%fd52, %fd23, %fd23;
	neg.f64 	%fd53, %fd52;
	fma.rn.f64 	%fd54, %fd23, %fd23, %fd53;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd42;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd42;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd55, {%r22, %r24};
	fma.rn.f64 	%fd56, %fd23, %fd55, %fd54;
	mul.rn.f64 	%fd57, %fd52, %fd23;
	neg.f64 	%fd58, %fd57;
	fma.rn.f64 	%fd59, %fd52, %fd23, %fd58;
	fma.rn.f64 	%fd60, %fd52, %fd42, %fd59;
	fma.rn.f64 	%fd61, %fd56, %fd23, %fd60;
	mul.rn.f64 	%fd62, %fd49, %fd57;
	neg.f64 	%fd63, %fd62;
	fma.rn.f64 	%fd64, %fd49, %fd57, %fd63;
	fma.rn.f64 	%fd65, %fd49, %fd61, %fd64;
	fma.rn.f64 	%fd66, %fd51, %fd57, %fd65;
	add.f64 	%fd67, %fd62, %fd66;
	sub.f64 	%fd68, %fd62, %fd67;
	add.f64 	%fd69, %fd66, %fd68;
	add.f64 	%fd70, %fd23, %fd67;
	sub.f64 	%fd71, %fd23, %fd70;
	add.f64 	%fd72, %fd67, %fd71;
	add.f64 	%fd73, %fd69, %fd72;
	add.f64 	%fd74, %fd42, %fd73;
	add.f64 	%fd75, %fd70, %fd74;
	sub.f64 	%fd76, %fd70, %fd75;
	add.f64 	%fd77, %fd74, %fd76;
	xor.b32  	%r25, %r52, -2147483648;
	mov.u32 	%r26, 1127219200;
	mov.b64 	%fd78, {%r25, %r26};
	mov.u32 	%r27, -2147483648;
	mov.b64 	%fd79, {%r27, %r26};
	sub.f64 	%fd80, %fd78, %fd79;
	mov.f64 	%fd81, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd82, %fd80, %fd81, %fd75;
	neg.f64 	%fd83, %fd80;
	fma.rn.f64 	%fd84, %fd83, %fd81, %fd82;
	sub.f64 	%fd85, %fd84, %fd75;
	sub.f64 	%fd86, %fd77, %fd85;
	mov.f64 	%fd87, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd88, %fd80, %fd87, %fd86;
	add.f64 	%fd89, %fd82, %fd88;
	sub.f64 	%fd90, %fd82, %fd89;
	add.f64 	%fd91, %fd88, %fd90;
	mov.f64 	%fd92, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd92;
	}
	add.s32 	%r29, %r28, %r28;
	setp.gt.u32	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd92;
	}
	mov.b64 	%fd93, {%r32, %r31};
	mul.rn.f64 	%fd94, %fd89, %fd93;
	neg.f64 	%fd95, %fd94;
	fma.rn.f64 	%fd96, %fd89, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd91, %fd93, %fd96;
	add.f64 	%fd4, %fd94, %fd97;
	sub.f64 	%fd98, %fd94, %fd4;
	add.f64 	%fd5, %fd97, %fd98;
	mov.f64 	%fd99, 0d4338000000000000;
	mov.f64 	%fd100, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd101;
	}
	mov.f64 	%fd102, 0dC338000000000000;
	add.rn.f64 	%fd103, %fd101, %fd102;
	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;
	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;
	mov.f64 	%fd108, 0d3E928AF3FCA213EA;
	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;
	mov.f64 	%fd111, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;
	mov.f64 	%fd113, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;
	mov.f64 	%fd115, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;
	mov.f64 	%fd117, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;
	mov.f64 	%fd119, 0d3F81111111122322;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;
	mov.f64 	%fd121, 0d3FA55555555502A1;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;
	mov.f64 	%fd123, 0d3FC5555555555511;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;
	mov.f64 	%fd125, 0d3FE000000000000B;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd107, %fd17;
	fma.rn.f64 	%fd128, %fd127, %fd107, %fd17;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd128;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd136, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	 %f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32	%p4, %f1, 0f4086232B;
	@%p4 bra 	BB14_7;

	setp.lt.f64	%p5, %fd4, 0d0000000000000000;
	add.f64 	%fd129, %fd4, 0d7FF0000000000000;
	selp.f64	%fd136, 0d0000000000000000, %fd129, %p5;
	setp.geu.f32	%p6, %f1, 0f40874800;
	@%p6 bra 	BB14_7;

	mov.f64 	%fd134, 0d4338000000000000;
	mov.f64 	%fd133, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd132, %fd4, %fd133, %fd134;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd132;
	}
	shr.u32 	%r36, %r48, 31;
	add.s32 	%r37, %r48, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r39, %r15;
	mov.b64 	%fd130, {%r14, %r40};
	sub.s32 	%r41, %r48, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd131, {%r44, %r43};
	mul.f64 	%fd136, %fd130, %fd131;

BB14_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd136;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.ne.s32	%p7, %r46, 2146435072;
	@%p7 bra 	BB14_9;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd136;
	}
	setp.eq.s32	%p8, %r47, 0;
	@%p8 bra 	BB14_10;

BB14_9:
	fma.rn.f64 	%fd136, %fd136, %fd5, %fd136;

BB14_10:
	st.param.f64	[func_retval0+0], %fd136;
	ret;
}


