//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23920284
// Cuda compilation tools, release 9.2, V9.2.88
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	_Z18generate2DGaussianPddi
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0
)
;

.visible .entry _Z18generate2DGaussianPddi(
	.param .u64 _Z18generate2DGaussianPddi_param_0,
	.param .f64 _Z18generate2DGaussianPddi_param_1,
	.param .u32 _Z18generate2DGaussianPddi_param_2
)
{
	.reg .pred 	%p<65>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<141>;
	.reg .f64 	%fd<137>;
	.reg .b64 	%rd<32>;


	ld.param.u64 	%rd5, [_Z18generate2DGaussianPddi_param_0];
	ld.param.f64 	%fd55, [_Z18generate2DGaussianPddi_param_1];
	ld.param.u32 	%r21, [_Z18generate2DGaussianPddi_param_2];
	mov.u32 	%r22, %tid.x;
	mov.u32 	%r23, %tid.y;
	shr.u32 	%r24, %r21, 31;
	add.s32 	%r25, %r21, %r24;
	shr.s32 	%r26, %r25, 1;
	sub.s32 	%r27, %r22, %r26;
	abs.s32 	%r1, %r27;
	sub.s32 	%r28, %r23, %r26;
	abs.s32 	%r2, %r28;
	cvt.rn.f64.s32	%fd1, %r1;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd1;
	}
	mov.f64 	%fd56, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd56;
	}
	bfe.u32 	%r29, %r4, 20, 11;
	add.s32 	%r30, %r29, -1012;
	mov.u64 	%rd6, 4611686018427387904;
	shl.b64 	%rd7, %rd6, %r30;
	setp.eq.s64	%p4, %rd7, -9223372036854775808;
	abs.f64 	%fd2, %fd1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd120, [retval0+0];
	
	//{
	}// Callseq End 0
	setp.lt.s32	%p5, %r3, 0;
	and.pred  	%p1, %p5, %p4;
	@!%p1 bra 	BB0_2;
	bra.uni 	BB0_1;

BB0_1:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r31}, %fd120;
	}
	xor.b32  	%r32, %r31, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r33, %temp}, %fd120;
	}
	mov.b64 	%fd120, {%r33, %r32};

BB0_2:
	setp.eq.s32	%p6, %r1, 0;
	@%p6 bra 	BB0_5;

	setp.gt.s32	%p7, %r3, -1;
	@%p7 bra 	BB0_6;

	cvt.rzi.f64.f64	%fd58, %fd56;
	setp.neu.f64	%p8, %fd58, 0d4000000000000000;
	selp.f64	%fd120, 0dFFF8000000000000, %fd120, %p8;
	bra.uni 	BB0_6;

BB0_5:
	bfe.u32 	%r34, %r4, 20, 11;
	add.s32 	%r35, %r34, -1012;
	shl.b64 	%rd9, %rd6, %r35;
	setp.eq.s64	%p9, %rd9, -9223372036854775808;
	selp.b32	%r36, %r3, 0, %p9;
	or.b32  	%r37, %r36, 2146435072;
	setp.lt.s32	%p10, %r4, 0;
	selp.b32	%r38, %r37, %r36, %p10;
	mov.u32 	%r39, 0;
	mov.b64 	%fd120, {%r39, %r38};

BB0_6:
	add.f64 	%fd121, %fd1, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r40}, %fd121;
	}
	and.b32  	%r41, %r40, 2146435072;
	setp.ne.s32	%p11, %r41, 2146435072;
	@%p11 bra 	BB0_7;

	setp.gtu.f64	%p12, %fd2, 0d7FF0000000000000;
	@%p12 bra 	BB0_16;

	and.b32  	%r42, %r4, 2147483647;
	setp.ne.s32	%p13, %r42, 2146435072;
	@%p13 bra 	BB0_11;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r43, %temp}, %fd56;
	}
	setp.eq.s32	%p14, %r43, 0;
	@%p14 bra 	BB0_15;

BB0_11:
	and.b32  	%r44, %r3, 2147483647;
	setp.ne.s32	%p15, %r44, 2146435072;
	@%p15 bra 	BB0_12;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r45, %temp}, %fd1;
	}
	setp.ne.s32	%p16, %r45, 0;
	mov.f64 	%fd121, %fd120;
	@%p16 bra 	BB0_16;

	shr.s32 	%r46, %r4, 31;
	and.b32  	%r47, %r46, -2146435072;
	add.s32 	%r48, %r47, 2146435072;
	or.b32  	%r49, %r48, -2147483648;
	selp.b32	%r50, %r49, %r48, %p1;
	mov.u32 	%r51, 0;
	mov.b64 	%fd121, {%r51, %r50};
	bra.uni 	BB0_16;

BB0_7:
	mov.f64 	%fd121, %fd120;
	bra.uni 	BB0_16;

BB0_12:
	mov.f64 	%fd121, %fd120;
	bra.uni 	BB0_16;

BB0_15:
	setp.gt.f64	%p17, %fd2, 0d3FF0000000000000;
	selp.b32	%r52, 2146435072, 0, %p17;
	xor.b32  	%r53, %r52, 2146435072;
	setp.lt.s32	%p18, %r4, 0;
	selp.b32	%r54, %r53, %r52, %p18;
	setp.eq.s32	%p19, %r1, -1;
	selp.b32	%r55, 1072693248, %r54, %p19;
	mov.u32 	%r56, 0;
	mov.b64 	%fd121, {%r56, %r55};

BB0_16:
	bfe.u32 	%r57, %r4, 20, 11;
	add.s32 	%r58, %r57, -1012;
	shl.b64 	%rd11, %rd6, %r58;
	setp.eq.s64	%p20, %rd11, -9223372036854775808;
	setp.eq.s32	%p21, %r1, 1;
	selp.f64	%fd13, 0d3FF0000000000000, %fd121, %p21;
	cvt.rn.f64.s32	%fd14, %r2;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5}, %fd14;
	}
	abs.f64 	%fd15, %fd14;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd15;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd123, [retval0+0];
	
	//{
	}// Callseq End 1
	setp.lt.s32	%p22, %r5, 0;
	and.pred  	%p2, %p22, %p20;
	@!%p2 bra 	BB0_18;
	bra.uni 	BB0_17;

BB0_17:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r59}, %fd123;
	}
	xor.b32  	%r60, %r59, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r61, %temp}, %fd123;
	}
	mov.b64 	%fd123, {%r61, %r60};

BB0_18:
	setp.eq.s32	%p23, %r2, 0;
	@%p23 bra 	BB0_21;

	setp.gt.s32	%p24, %r5, -1;
	@%p24 bra 	BB0_22;

	cvt.rzi.f64.f64	%fd61, %fd56;
	setp.neu.f64	%p25, %fd61, 0d4000000000000000;
	selp.f64	%fd123, 0dFFF8000000000000, %fd123, %p25;
	bra.uni 	BB0_22;

BB0_21:
	bfe.u32 	%r62, %r4, 20, 11;
	add.s32 	%r63, %r62, -1012;
	shl.b64 	%rd13, %rd6, %r63;
	setp.eq.s64	%p26, %rd13, -9223372036854775808;
	selp.b32	%r64, %r5, 0, %p26;
	or.b32  	%r65, %r64, 2146435072;
	setp.lt.s32	%p27, %r4, 0;
	selp.b32	%r66, %r65, %r64, %p27;
	mov.u32 	%r67, 0;
	mov.b64 	%fd123, {%r67, %r66};

BB0_22:
	add.f64 	%fd124, %fd14, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r68}, %fd124;
	}
	and.b32  	%r69, %r68, 2146435072;
	setp.ne.s32	%p28, %r69, 2146435072;
	@%p28 bra 	BB0_23;

	setp.gtu.f64	%p29, %fd15, 0d7FF0000000000000;
	@%p29 bra 	BB0_32;

	and.b32  	%r70, %r4, 2147483647;
	setp.ne.s32	%p30, %r70, 2146435072;
	@%p30 bra 	BB0_27;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r71, %temp}, %fd56;
	}
	setp.eq.s32	%p31, %r71, 0;
	@%p31 bra 	BB0_31;

BB0_27:
	and.b32  	%r72, %r5, 2147483647;
	setp.ne.s32	%p32, %r72, 2146435072;
	@%p32 bra 	BB0_28;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r73, %temp}, %fd14;
	}
	setp.ne.s32	%p33, %r73, 0;
	mov.f64 	%fd124, %fd123;
	@%p33 bra 	BB0_32;

	shr.s32 	%r74, %r4, 31;
	and.b32  	%r75, %r74, -2146435072;
	add.s32 	%r76, %r75, 2146435072;
	or.b32  	%r77, %r76, -2147483648;
	selp.b32	%r78, %r77, %r76, %p2;
	mov.u32 	%r79, 0;
	mov.b64 	%fd124, {%r79, %r78};
	bra.uni 	BB0_32;

BB0_23:
	mov.f64 	%fd124, %fd123;
	bra.uni 	BB0_32;

BB0_28:
	mov.f64 	%fd124, %fd123;
	bra.uni 	BB0_32;

BB0_31:
	setp.gt.f64	%p34, %fd15, 0d3FF0000000000000;
	selp.b32	%r80, 2146435072, 0, %p34;
	xor.b32  	%r81, %r80, 2146435072;
	setp.lt.s32	%p35, %r4, 0;
	selp.b32	%r82, %r81, %r80, %p35;
	setp.eq.s32	%p36, %r2, -1;
	selp.b32	%r83, 1072693248, %r82, %p36;
	mov.u32 	%r84, 0;
	mov.b64 	%fd124, {%r84, %r83};

BB0_32:
	bfe.u32 	%r85, %r4, 20, 11;
	add.s32 	%r86, %r85, -1012;
	shl.b64 	%rd15, %rd6, %r86;
	setp.eq.s64	%p37, %rd15, -9223372036854775808;
	setp.eq.s32	%p38, %r2, 1;
	selp.f64	%fd63, 0d3FF0000000000000, %fd124, %p38;
	add.f64 	%fd26, %fd13, %fd63;
	abs.f64 	%fd27, %fd55;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd27;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0
	);
	ld.param.f64	%fd126, [retval0+0];
	
	//{
	}// Callseq End 2
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6}, %fd55;
	}
	setp.lt.s32	%p39, %r6, 0;
	and.pred  	%p3, %p39, %p37;
	@!%p3 bra 	BB0_34;
	bra.uni 	BB0_33;

BB0_33:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r87}, %fd126;
	}
	xor.b32  	%r88, %r87, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r89, %temp}, %fd126;
	}
	mov.b64 	%fd126, {%r89, %r88};

BB0_34:
	setp.eq.f64	%p40, %fd55, 0d0000000000000000;
	@%p40 bra 	BB0_37;
	bra.uni 	BB0_35;

BB0_37:
	bfe.u32 	%r90, %r4, 20, 11;
	add.s32 	%r91, %r90, -1012;
	shl.b64 	%rd17, %rd6, %r91;
	setp.eq.s64	%p43, %rd17, -9223372036854775808;
	selp.b32	%r92, %r6, 0, %p43;
	or.b32  	%r93, %r92, 2146435072;
	setp.lt.s32	%p44, %r4, 0;
	selp.b32	%r94, %r93, %r92, %p44;
	mov.u32 	%r95, 0;
	mov.b64 	%fd126, {%r95, %r94};
	bra.uni 	BB0_38;

BB0_35:
	setp.gt.s32	%p41, %r6, -1;
	@%p41 bra 	BB0_38;

	cvt.rzi.f64.f64	%fd65, %fd56;
	setp.neu.f64	%p42, %fd65, 0d4000000000000000;
	selp.f64	%fd126, 0dFFF8000000000000, %fd126, %p42;

BB0_38:
	add.f64 	%fd127, %fd55, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r96}, %fd127;
	}
	and.b32  	%r97, %r96, 2146435072;
	setp.ne.s32	%p45, %r97, 2146435072;
	@%p45 bra 	BB0_39;

	setp.gtu.f64	%p46, %fd27, 0d7FF0000000000000;
	@%p46 bra 	BB0_48;

	and.b32  	%r98, %r4, 2147483647;
	setp.ne.s32	%p47, %r98, 2146435072;
	@%p47 bra 	BB0_43;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r99, %temp}, %fd56;
	}
	setp.eq.s32	%p48, %r99, 0;
	@%p48 bra 	BB0_47;

BB0_43:
	and.b32  	%r100, %r6, 2147483647;
	setp.ne.s32	%p49, %r100, 2146435072;
	@%p49 bra 	BB0_44;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r101, %temp}, %fd55;
	}
	setp.ne.s32	%p50, %r101, 0;
	mov.f64 	%fd127, %fd126;
	@%p50 bra 	BB0_48;

	shr.s32 	%r102, %r4, 31;
	and.b32  	%r103, %r102, -2146435072;
	add.s32 	%r104, %r103, 2146435072;
	or.b32  	%r105, %r104, -2147483648;
	selp.b32	%r106, %r105, %r104, %p3;
	mov.u32 	%r107, 0;
	mov.b64 	%fd127, {%r107, %r106};
	bra.uni 	BB0_48;

BB0_39:
	mov.f64 	%fd127, %fd126;
	bra.uni 	BB0_48;

BB0_44:
	mov.f64 	%fd127, %fd126;
	bra.uni 	BB0_48;

BB0_47:
	setp.gt.f64	%p51, %fd27, 0d3FF0000000000000;
	selp.b32	%r108, 2146435072, 0, %p51;
	xor.b32  	%r109, %r108, 2146435072;
	setp.lt.s32	%p52, %r4, 0;
	selp.b32	%r110, %r109, %r108, %p52;
	setp.eq.f64	%p53, %fd55, 0dBFF0000000000000;
	selp.b32	%r111, 1072693248, %r110, %p53;
	mov.u32 	%r112, 0;
	mov.b64 	%fd127, {%r112, %r111};

BB0_48:
	add.f64 	%fd67, %fd127, %fd127;
	setp.eq.f64	%p54, %fd55, 0d3FF0000000000000;
	selp.f64	%fd68, 0d4000000000000000, %fd67, %p54;
	neg.f64 	%fd69, %fd26;
	div.rn.f64 	%fd38, %fd69, %fd68;
	mov.f64 	%fd70, 0d4338000000000000;
	mov.f64 	%fd71, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd72, %fd38, %fd71, %fd70;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7, %temp}, %fd72;
	}
	mov.f64 	%fd73, 0dC338000000000000;
	add.rn.f64 	%fd74, %fd72, %fd73;
	mov.f64 	%fd75, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd76, %fd74, %fd75, %fd38;
	mov.f64 	%fd77, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd78, %fd74, %fd77, %fd76;
	mov.f64 	%fd79, 0d3E928AF3FCA213EA;
	mov.f64 	%fd80, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd81, %fd80, %fd78, %fd79;
	mov.f64 	%fd82, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd83, %fd81, %fd78, %fd82;
	mov.f64 	%fd84, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd85, %fd83, %fd78, %fd84;
	mov.f64 	%fd86, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd87, %fd85, %fd78, %fd86;
	mov.f64 	%fd88, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd89, %fd87, %fd78, %fd88;
	mov.f64 	%fd90, 0d3F81111111122322;
	fma.rn.f64 	%fd91, %fd89, %fd78, %fd90;
	mov.f64 	%fd92, 0d3FA55555555502A1;
	fma.rn.f64 	%fd93, %fd91, %fd78, %fd92;
	mov.f64 	%fd94, 0d3FC5555555555511;
	fma.rn.f64 	%fd95, %fd93, %fd78, %fd94;
	mov.f64 	%fd96, 0d3FE000000000000B;
	fma.rn.f64 	%fd97, %fd95, %fd78, %fd96;
	mov.f64 	%fd98, 0d3FF0000000000000;
	fma.rn.f64 	%fd99, %fd97, %fd78, %fd98;
	fma.rn.f64 	%fd100, %fd99, %fd78, %fd98;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r8, %temp}, %fd100;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9}, %fd100;
	}
	shl.b32 	%r113, %r7, 20;
	add.s32 	%r114, %r9, %r113;
	mov.b64 	%fd128, {%r8, %r114};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r115}, %fd38;
	}
	mov.b32 	 %f2, %r115;
	abs.f32 	%f1, %f2;
	setp.lt.f32	%p55, %f1, 0f4086232B;
	@%p55 bra 	BB0_51;

	setp.lt.f64	%p56, %fd38, 0d0000000000000000;
	add.f64 	%fd101, %fd38, 0d7FF0000000000000;
	selp.f64	%fd128, 0d0000000000000000, %fd101, %p56;
	setp.geu.f32	%p57, %f1, 0f40874800;
	@%p57 bra 	BB0_51;

	shr.u32 	%r116, %r7, 31;
	add.s32 	%r117, %r7, %r116;
	shr.s32 	%r118, %r117, 1;
	shl.b32 	%r119, %r118, 20;
	add.s32 	%r120, %r119, %r9;
	mov.b64 	%fd102, {%r8, %r120};
	sub.s32 	%r121, %r7, %r118;
	shl.b32 	%r122, %r121, 20;
	add.s32 	%r123, %r122, 1072693248;
	mov.u32 	%r124, 0;
	mov.b64 	%fd103, {%r124, %r123};
	mul.f64 	%fd128, %fd102, %fd103;

BB0_51:
	mad.lo.s32 	%r127, %r23, %r21, %r22;
	cvta.to.global.u64 	%rd18, %rd5;
	mul.wide.s32 	%rd19, %r127, 8;
	add.s64 	%rd1, %rd18, %rd19;
	st.global.f64 	[%rd1], %fd128;
	bar.sync 	0;
	mov.f64 	%fd135, 0d0000000000000000;
	setp.lt.s32	%p58, %r21, 1;
	@%p58 bra 	BB0_66;

	and.b32  	%r10, %r21, 3;
	mov.u32 	%r128, 0;
	mov.f64 	%fd105, 0d0000000000000000;
	mov.f64 	%fd135, %fd105;
	mov.u32 	%r136, %r128;

BB0_53:
	mul.lo.s32 	%r12, %r136, %r21;
	setp.eq.s32	%p59, %r10, 0;
	@%p59 bra 	BB0_54;

	setp.eq.s32	%p60, %r10, 1;
	@%p60 bra 	BB0_56;
	bra.uni 	BB0_57;

BB0_56:
	mov.u32 	%r138, %r128;
	bra.uni 	BB0_61;

BB0_54:
	mov.f64 	%fd132, %fd135;
	mov.u32 	%r140, %r128;
	mov.f64 	%fd135, %fd105;
	bra.uni 	BB0_62;

BB0_57:
	setp.eq.s32	%p61, %r10, 2;
	@%p61 bra 	BB0_58;
	bra.uni 	BB0_59;

BB0_58:
	mov.u32 	%r137, %r128;
	bra.uni 	BB0_60;

BB0_59:
	mul.wide.s32 	%rd21, %r12, 8;
	add.s64 	%rd22, %rd18, %rd21;
	ld.global.f64 	%fd107, [%rd22];
	add.f64 	%fd135, %fd135, %fd107;
	mov.u32 	%r137, 1;

BB0_60:
	add.s32 	%r133, %r137, %r12;
	mul.wide.s32 	%rd24, %r133, 8;
	add.s64 	%rd25, %rd18, %rd24;
	ld.global.f64 	%fd108, [%rd25];
	add.f64 	%fd135, %fd135, %fd108;
	add.s32 	%r138, %r137, 1;

BB0_61:
	add.s32 	%r134, %r138, %r12;
	mul.wide.s32 	%rd27, %r134, 8;
	add.s64 	%rd28, %rd18, %rd27;
	ld.global.f64 	%fd109, [%rd28];
	add.f64 	%fd132, %fd135, %fd109;
	add.s32 	%r140, %r138, 1;
	mov.f64 	%fd135, %fd132;

BB0_62:
	setp.lt.u32	%p62, %r21, 4;
	@%p62 bra 	BB0_65;

	mad.lo.s32 	%r135, %r21, %r136, %r140;
	mul.wide.s32 	%rd30, %r135, 8;
	add.s64 	%rd31, %rd18, %rd30;
	mov.f64 	%fd135, %fd132;

BB0_64:
	ld.global.f64 	%fd110, [%rd31];
	add.f64 	%fd111, %fd135, %fd110;
	ld.global.f64 	%fd112, [%rd31+8];
	add.f64 	%fd113, %fd111, %fd112;
	ld.global.f64 	%fd114, [%rd31+16];
	add.f64 	%fd115, %fd113, %fd114;
	ld.global.f64 	%fd116, [%rd31+24];
	add.f64 	%fd135, %fd115, %fd116;
	add.s64 	%rd31, %rd31, 32;
	add.s32 	%r140, %r140, 4;
	setp.lt.s32	%p63, %r140, %r21;
	@%p63 bra 	BB0_64;

BB0_65:
	add.s32 	%r136, %r136, 1;
	setp.lt.s32	%p64, %r136, %r21;
	@%p64 bra 	BB0_53;

BB0_66:
	ld.global.f64 	%fd117, [%rd1];
	div.rn.f64 	%fd118, %fd117, %fd135;
	st.global.f64 	[%rd1], %fd118;
	ret;
}

.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<138>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd12;
	}
	shr.u32 	%r51, %r50, 20;
	setp.ne.s32	%p1, %r51, 0;
	@%p1 bra 	BB1_2;

	mul.f64 	%fd13, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd13;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd13;
	}
	shr.u32 	%r16, %r50, 20;
	add.s32 	%r51, %r16, -54;

BB1_2:
	add.s32 	%r52, %r51, -1023;
	and.b32  	%r17, %r50, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd135, {%r49, %r18};
	setp.lt.u32	%p2, %r18, 1073127583;
	@%p2 bra 	BB1_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd135;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd135;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd135, {%r19, %r21};
	add.s32 	%r52, %r51, -1022;

BB1_4:
	add.f64 	%fd14, %fd135, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd15, %fd14;
	neg.f64 	%fd16, %fd14;
	mov.f64 	%fd17, 0d3FF0000000000000;
	fma.rn.f64 	%fd18, %fd16, %fd15, %fd17;
	fma.rn.f64 	%fd19, %fd18, %fd18, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd15, %fd15;
	add.f64 	%fd21, %fd135, 0dBFF0000000000000;
	mul.f64 	%fd22, %fd21, %fd20;
	fma.rn.f64 	%fd23, %fd21, %fd20, %fd22;
	mul.f64 	%fd24, %fd23, %fd23;
	mov.f64 	%fd25, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd26, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd27, %fd26, %fd24, %fd25;
	mov.f64 	%fd28, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd29, %fd27, %fd24, %fd28;
	mov.f64 	%fd30, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd31, %fd29, %fd24, %fd30;
	mov.f64 	%fd32, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd33, %fd31, %fd24, %fd32;
	mov.f64 	%fd34, 0d3F6249249242B910;
	fma.rn.f64 	%fd35, %fd33, %fd24, %fd34;
	mov.f64 	%fd36, 0d3F89999999999DFB;
	fma.rn.f64 	%fd37, %fd35, %fd24, %fd36;
	sub.f64 	%fd38, %fd21, %fd23;
	add.f64 	%fd39, %fd38, %fd38;
	neg.f64 	%fd40, %fd23;
	fma.rn.f64 	%fd41, %fd40, %fd21, %fd39;
	mul.f64 	%fd42, %fd20, %fd41;
	fma.rn.f64 	%fd43, %fd24, %fd37, 0d3FB5555555555555;
	mov.f64 	%fd44, 0d3FB5555555555555;
	sub.f64 	%fd45, %fd44, %fd43;
	fma.rn.f64 	%fd46, %fd24, %fd37, %fd45;
	add.f64 	%fd47, %fd46, 0d0000000000000000;
	add.f64 	%fd48, %fd47, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd49, %fd43, %fd48;
	sub.f64 	%fd50, %fd43, %fd49;
	add.f64 	%fd51, %fd48, %fd50;
	mul.rn.f64 	%fd52, %fd23, %fd23;
	neg.f64 	%fd53, %fd52;
	fma.rn.f64 	%fd54, %fd23, %fd23, %fd53;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd42;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd42;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd55, {%r22, %r24};
	fma.rn.f64 	%fd56, %fd23, %fd55, %fd54;
	mul.rn.f64 	%fd57, %fd52, %fd23;
	neg.f64 	%fd58, %fd57;
	fma.rn.f64 	%fd59, %fd52, %fd23, %fd58;
	fma.rn.f64 	%fd60, %fd52, %fd42, %fd59;
	fma.rn.f64 	%fd61, %fd56, %fd23, %fd60;
	mul.rn.f64 	%fd62, %fd49, %fd57;
	neg.f64 	%fd63, %fd62;
	fma.rn.f64 	%fd64, %fd49, %fd57, %fd63;
	fma.rn.f64 	%fd65, %fd49, %fd61, %fd64;
	fma.rn.f64 	%fd66, %fd51, %fd57, %fd65;
	add.f64 	%fd67, %fd62, %fd66;
	sub.f64 	%fd68, %fd62, %fd67;
	add.f64 	%fd69, %fd66, %fd68;
	add.f64 	%fd70, %fd23, %fd67;
	sub.f64 	%fd71, %fd23, %fd70;
	add.f64 	%fd72, %fd67, %fd71;
	add.f64 	%fd73, %fd69, %fd72;
	add.f64 	%fd74, %fd42, %fd73;
	add.f64 	%fd75, %fd70, %fd74;
	sub.f64 	%fd76, %fd70, %fd75;
	add.f64 	%fd77, %fd74, %fd76;
	xor.b32  	%r25, %r52, -2147483648;
	mov.u32 	%r26, 1127219200;
	mov.b64 	%fd78, {%r25, %r26};
	mov.u32 	%r27, -2147483648;
	mov.b64 	%fd79, {%r27, %r26};
	sub.f64 	%fd80, %fd78, %fd79;
	mov.f64 	%fd81, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd82, %fd80, %fd81, %fd75;
	neg.f64 	%fd83, %fd80;
	fma.rn.f64 	%fd84, %fd83, %fd81, %fd82;
	sub.f64 	%fd85, %fd84, %fd75;
	sub.f64 	%fd86, %fd77, %fd85;
	mov.f64 	%fd87, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd88, %fd80, %fd87, %fd86;
	add.f64 	%fd89, %fd82, %fd88;
	sub.f64 	%fd90, %fd82, %fd89;
	add.f64 	%fd91, %fd88, %fd90;
	mov.f64 	%fd92, 0d4000000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd92;
	}
	add.s32 	%r29, %r28, %r28;
	setp.gt.u32	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd92;
	}
	mov.b64 	%fd93, {%r32, %r31};
	mul.rn.f64 	%fd94, %fd89, %fd93;
	neg.f64 	%fd95, %fd94;
	fma.rn.f64 	%fd96, %fd89, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd91, %fd93, %fd96;
	add.f64 	%fd4, %fd94, %fd97;
	sub.f64 	%fd98, %fd94, %fd4;
	add.f64 	%fd5, %fd97, %fd98;
	mov.f64 	%fd99, 0d4338000000000000;
	mov.f64 	%fd100, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd101;
	}
	mov.f64 	%fd102, 0dC338000000000000;
	add.rn.f64 	%fd103, %fd101, %fd102;
	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;
	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;
	mov.f64 	%fd108, 0d3E928AF3FCA213EA;
	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;
	mov.f64 	%fd111, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;
	mov.f64 	%fd113, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;
	mov.f64 	%fd115, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;
	mov.f64 	%fd117, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;
	mov.f64 	%fd119, 0d3F81111111122322;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;
	mov.f64 	%fd121, 0d3FA55555555502A1;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;
	mov.f64 	%fd123, 0d3FC5555555555511;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;
	mov.f64 	%fd125, 0d3FE000000000000B;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd107, %fd17;
	fma.rn.f64 	%fd128, %fd127, %fd107, %fd17;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd128;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd136, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	 %f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32	%p4, %f1, 0f4086232B;
	@%p4 bra 	BB1_7;

	setp.lt.f64	%p5, %fd4, 0d0000000000000000;
	add.f64 	%fd129, %fd4, 0d7FF0000000000000;
	selp.f64	%fd136, 0d0000000000000000, %fd129, %p5;
	setp.geu.f32	%p6, %f1, 0f40874800;
	@%p6 bra 	BB1_7;

	mov.f64 	%fd134, 0d4338000000000000;
	mov.f64 	%fd133, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd132, %fd4, %fd133, %fd134;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd132;
	}
	shr.u32 	%r36, %r48, 31;
	add.s32 	%r37, %r48, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r39, %r15;
	mov.b64 	%fd130, {%r14, %r40};
	sub.s32 	%r41, %r48, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd131, {%r44, %r43};
	mul.f64 	%fd136, %fd130, %fd131;

BB1_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd136;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.ne.s32	%p7, %r46, 2146435072;
	@%p7 bra 	BB1_9;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd136;
	}
	setp.eq.s32	%p8, %r47, 0;
	@%p8 bra 	BB1_10;

BB1_9:
	fma.rn.f64 	%fd136, %fd136, %fd5, %fd136;

BB1_10:
	st.param.f64	[func_retval0+0], %fd136;
	ret;
}


